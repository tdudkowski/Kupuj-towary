{"version":3,"sources":["Kupuj-towary/App.js","serviceWorker.js","index.js"],"names":["goodsArray","key","name","price","numberAvailable","exchangeRates","ratio","numberArray","Array","length","fill","costArray","receiptArray","limitActualValue","prices2ShowArray","i","push","cost2ShowArray","Exchange","props","console","log","action","htmlFor","type","checked","onChange","handleExchange","Cashier","map","t","numberInCart","cost","sumTotal","onClick","handleBuy","className","undefined","Wallet","limit","Math","abs","limitActual","Order","orderValue","orderValueIC","number","costIC","Header","CartWidget","handleGood","Good","data","Main","order","bill","App","state","limit2Show","limitActual2Show","prices2Show","cost2Show","dumTotal2Show","currency","c","filter","updateCost2ShowArray","makeSumTotal","makeArray2Show","currencyPrice","parseFloat","toFixed","setState","cutTail","toString","indexOf","substr","mathMachine","x","y","operator","sumBefore","sumAfter","sumInArticle","xBefore","floor","xAfter","yBefore","yAfter","parseInt","newCost","prevState","sumTotal2Show","reduce","total","num","makeNewLimit","makeReceipt","newLimit","Helmet","charset","content","http-equiv","property","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gLAwBA,I,sFApBIA,G,MAAa,CACf,CAAEC,IAAK,EAAGC,KAAM,iBAAkBC,MAAO,IAAMC,gBAAiB,KAChE,CAAEH,IAAK,EAAGC,KAAM,cAAeC,MAAO,EAAGC,gBAAiB,KAC1D,CAAEH,IAAK,EAAGC,KAAM,eAAgBC,MAAO,GAAIC,gBAAiB,KAC5D,CAAEH,IAAK,EAAGC,KAAM,2BAAyBC,MAAO,KAAMC,gBAAiB,MAGrEC,EAAgB,CAClB,CAAEJ,IAAK,EAAGC,KAAM,MAAOI,MAAO,GAC9B,CAAEL,IAAK,EAAGC,KAAM,OAAQI,MAAO,KAC/B,CAAEL,IAAK,EAAGC,KAAM,QAASI,MAAO,MAG9BC,EAAc,IAAIC,MAAMR,EAAWS,QAAQC,KAAK,GAChDC,EAAY,IAAIH,MAAMR,EAAWS,QAAQC,KAAK,GAE9CE,EAAe,GACfC,EAAmB,EACnBP,EAAQ,EACRQ,EAAmB,GACdC,EAAI,EAAGA,EAAIf,EAAWS,OAAQM,IACrCD,EAAiBE,KAAKhB,EAAWe,GAAGZ,OAGtC,IAAIc,EAAiB,IAAIT,MAAMR,EAAWS,QAAQC,KAAK,GAEjDQ,EAAW,SAAAC,GAEf,OADAC,QAAQC,IAAIF,GAEV,oCACE,wCACA,8CACA,0BAAMG,OAAO,IACX,2BAAOC,QAAQ,IAAf,MACM,IACJ,2BACEC,KAAK,QACLtB,KAAK,WACLuB,QAASN,EAAMM,SAAW,UAE1BC,SAAU,kBAAMP,EAAMQ,eAAe,UACpC,IACH,8BAEF,2BAAOJ,QAAQ,IAAf,OACO,IACL,2BACEC,KAAK,QACLtB,KAAK,WAELwB,SAAU,kBAAMP,EAAMQ,eAAe,WACpC,IACH,8BAEF,2BAAOJ,QAAQ,IAAf,YACY,IACV,2BACEC,KAAK,QACLtB,KAAK,WAELwB,SAAU,kBAAMP,EAAMQ,eAAe,gBAQ3CC,EAAU,SAAAT,GACd,OACE,oCACE,uCACA,4BACGnB,EAAW6B,KAAI,SAAAC,GAAC,OACfX,EAAMY,aAAaD,EAAE7B,KAAO,EAC1B,wBAAIA,IAAK6B,EAAE7B,KACR6B,EAAE5B,KADL,KACaiB,EAAMY,aAAaD,EAAE7B,KADlC,aACkDkB,EAAMa,KAAKF,EAAE7B,MAE7D,SAGR,yCAAekB,EAAMc,UACrB,4BACEC,QAAS,kBAAMf,EAAMgB,aACrBC,UAAYjB,EAAMc,cAAwBI,EAAb,YAF/B,oCAUAC,EAAS,SAAAnB,GACb,OACE,oCACE,sCACA,2BACGA,EAAMoB,MAAQ,EAAd,2BACuBpB,EAAMoB,OAD7B,qCAEiCC,KAAKC,IAAItB,EAAMoB,SAEnD,2BACGpB,EAAMuB,YAAc,EAApB,mCAC+BvB,EAAMuB,aADrC,iCAE6BF,KAAKC,IAAItB,EAAMuB,iBAM/CC,EAAQ,SAAAxB,GAEZ,OADAC,QAAQC,IAAI,SAAWF,EAAMyB,WAAYzB,EAAM0B,cAE7C,oCACE,2CACA,4BACGjC,EAAaiB,KAAI,SAAAC,GAAC,OACjB,wBAAI7B,IAAK6B,EAAE7B,KACR6B,EAAE5B,KADL,KACa4B,EAAEgB,OADf,aACiChB,EAAEE,KAAM,IACtCF,EAAEE,OAASF,EAAEiB,OAAS,IAAMjB,EAAEiB,OAAS,IAAM,UAIpD,yCACc5B,EAAMyB,WAAY,IAC7BzB,EAAMyB,YAAczB,EAAM0B,aACvB,KACA,IAAM1B,EAAM0B,aAAe,KAEjC,gDAYAG,EAAS,WACb,OACE,gCACE,wEACA,4BACE,gJAIA,qGAGA,yJAIA,4HAIA,4JAIA,yGAIA,gNAMF,4FAKAC,EAAa,SAAA9B,GAAU,IACnBf,EAAoBe,EAAMf,gBAA1BA,gBACFH,EAAMkB,EAAMA,MAClB,OACE,yBAAKiB,UAAU,cACb,6BACE,4CACA,0CAAgBhC,EAAkBe,EAAMY,aAAa9B,GAArD,QACA,wCAAcG,EAAd,SAEF,6BACE,6BACE,yCAAeH,GACf,+CACoBkB,EAAMY,aAAa9B,GADvC,IAEE,6BAFF,cAGckB,EAAMa,KAAK/B,KAG3B,6BACE,4BACEiC,QAAS,kBAAMf,EAAM+B,WAAWjD,EAAK,UACrCmC,UAAuC,IAA5BjB,EAAMY,aAAa9B,GAAa,gBAAaoC,GAEvD,IAJH,IAKI,KAEJ,4BACEH,QAAS,kBAAMf,EAAM+B,WAAWjD,EAAK,SACrCmC,UACEhC,EAAkBe,EAAMY,aAAa9B,KAAS,EAC1C,gBACAoC,GAGL,IARH,IASI,SAQRc,EAAO,SAAAhC,GAAU,IAAD,EAC0BA,EAAMiC,KAA5CnD,EADY,EACZA,IAAKC,EADO,EACPA,KAAMC,EADC,EACDA,MAAOC,EADN,EACMA,gBAC1B,OACE,yBAAKgC,UAAU,QACb,4BAAKlC,GACL,yBAAKkC,UAAU,SACb,qCAAWjC,GACX,4DAAkCgB,EAAMhB,MAAMF,KAGhD,kBAAC,EAAD,CACEkB,MAAOlB,EACPG,gBAAiB,CAAEA,mBACnB2B,aAAcZ,EAAMY,aACpBC,KAAMb,EAAMa,KACZkB,WAAY/B,EAAM+B,eAMpBG,EAAO,SAAAlC,GACX,OACE,8BACE,yBAAKiB,UAAU,QACZpC,EAAW6B,KAAI,SAAAC,GAAC,OACf,kBAAC,EAAD,CACE7B,IAAK6B,EAAE7B,IACPmD,KAAMtB,EACN3B,MAAOgB,EAAMhB,MACb4B,aAAcZ,EAAMY,aACpBC,KAAMb,EAAMa,KACZkB,WAAY/B,EAAM+B,iBAIxB,yBAAKd,UAAU,QACb,6BACE,kBAAC,EAAD,CACEX,QAASN,EAAMM,QACfE,eAAgBR,EAAMQ,kBAG1B,6BACA,6BACE,kBAAC,EAAD,CACEI,aAAcZ,EAAMY,aACpBC,KAAMb,EAAMa,KACZC,SAAUd,EAAMc,SAChBE,UAAWhB,EAAMgB,aAEd,IACP,6BACA,6BACE,kBAAC,EAAD,CACEI,MAAOpB,EAAMoB,MACbN,SAAUd,EAAMc,SAChBS,YAAavB,EAAMuB,eAGtBvB,EAAMmC,OACL,oCACE,6BACA,6BACE,kBAAC,EAAD,CACEC,KAAMpC,EAAMoC,KACZX,WAAYzB,EAAMyB,WAClBC,aAAc1B,EAAM0B,oBAmSrBW,E,2MAxRbC,MAAQ,CACNlB,MAAO,IACPG,YAAa7B,EACb6C,WAAY,EACZC,iBAAkB,EAClB5B,aAAcxB,EACdgD,KAAM5C,EACNiD,YAAa9C,EACb+C,UAAW5C,EACXgB,SAAU,EACV6B,cAAe,EACfR,OAAO,EACPV,WAAY,EACZC,aAAc,EACdpB,SAAS,EACTsC,SAAU,O,EAGZpC,eAAiB,SAAAoC,GACf,IAAIC,EAAI3D,EAAc4D,QAAO,SAAAD,GAAC,OAAIA,EAAE9D,OAAS6D,KAC7CzD,EAAQ0D,EAAE,GAAG1D,MACb,EAAK4D,uBACL,EAAKC,eACL,EAAKC,iBACLtD,EAAmB,GACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAWS,OAAQM,IAAK,CAC1C,IAAIsD,EAAgBC,YAAYtE,EAAWe,GAAGZ,MAAQG,GAAOiE,QAAQ,IACrEzD,EAAiBE,KAAKqD,GASxB,OAPA,EAAKG,SAAS,CACZZ,YAAa9C,EACb+C,UAAW5C,EACXQ,SAAS,IAEM,QAAbsC,GAAoB,EAAKS,SAAS,CAAE/C,SAAS,IACjDL,QAAQC,IAAI,4BAA8Bf,GACnCA,G,EAGTmE,QAAU,SAAA3B,GACR,OAAIA,EAAO4B,WAAWC,QAAQ,KAAO,EAC5B7B,EAAO4B,WAAWE,OAAO9B,EAAO4B,WAAWC,QAAQ,KAAO,EAAG,GAE7D,K,EAIXE,YAAc,SAACC,EAAGC,EAAGC,GACnB,IAKIC,EACAC,EACAC,EAPAC,EAAU5C,KAAK6C,MAAMP,GACrBQ,EAAS,EAAKb,QAAQK,GACtBS,EAAU/C,KAAK6C,MAAMN,GACrBS,EAAS,EAAKf,QAAQM,GAM1B,OAAQC,GACN,IAAK,OAQH,OAPAC,EAAYG,EAAUG,EACA,IAAlBD,EAAO7E,SACT6E,GAAU,IAGZH,EAAeF,GADfC,GAAYO,SAASH,GAAUG,SAASD,IAAW,KAEnDpE,QAAQC,IAAI,uBAAyBiE,EAAQE,EAAQN,GAC9CC,EACT,IAAK,QAQH,OAPAF,EAAYG,EAAUG,EACA,IAAlBD,EAAO7E,SACT6E,GAAU,IAEZJ,GAAYO,SAASH,GAAUG,SAASD,IAAW,IACnDpE,QAAQC,IAAI,wBAA0BiE,EAAQE,EAAQN,GACtDC,EAAeF,EAAYC,EAE7B,IAAK,iBAiBH,OAhBA9D,QAAQC,IACN,iCAAmC+D,EACnCE,EACAC,EACAC,EACAV,EACAC,EACAC,EACA1E,GAEF2E,EAAYG,EAAUL,EACtBG,EAAYI,EAASP,EAAK,GAC1B3D,QAAQC,IAAI,SAAW4D,EAAWC,GAElCC,EAAeF,EAAYC,EAG7B,QACE9D,QAAQC,IAAI,OAASyD,EAAGC,EAAGC,K,EAIjCd,qBAAuB,WACrBjD,EAAiB,GACjB,IAAK,IAAIF,EAAI,EAAGA,EAAIf,EAAWS,OAAQM,IAAK,CAC1C,IAAI2E,EAAUpB,YAAY,EAAKb,MAAMF,KAAKxC,GAAKT,GAAOiE,QAAQ,IAC9DtD,EAAeD,KAAK0E,K,EAIxBtB,eAAiB,WACf,EAAKF,uBAEL,EAAKM,UAAS,SAAAmB,GAAS,MAAK,CAC1BC,cAAetB,YAAYqB,EAAU1D,SAAW3B,GAAOiE,QAAQ,IAC/Db,WAAYY,YAAYqB,EAAUpD,MAAQjC,GAAOiE,QAAQ,IACzDZ,iBAAkBW,YAAYqB,EAAUjD,YAAcpC,GAAOiE,QAAQ,IACrEX,YAAa9C,EACb+C,UAAW5C,MAEbG,QAAQC,IAAI,EAAKoC,MAAMmC,gB,EAIzBzB,aAAe,WACb,EAAKD,uBACL,IAAIjC,EAAW,EAAKwB,MAAMF,KAAKsC,QAAO,SAACC,EAAOC,GAC5C,OAAOD,EAAQC,KAGD,IADhB9D,EAAWA,EAASsC,QAAQ,MAE1BtC,EAAWwD,SAAS,IAEtB,EAAKjB,SAAS,CACZvC,SAAUA,K,EAId+D,aAAe,WACb,EAAKxB,UAAS,SAAAmB,GAAS,MAAK,CAC1BjD,YAAa,EAAKmC,YAChBc,EAAUpD,MACVoD,EAAU1D,SACV,SACAsC,QAAQ,Q,EAIdrB,WAAa,SAACjD,EAAK+E,GACjB,GACe,SAAbA,GACA,EAAKvB,MAAM1B,aAAa9B,GAAOD,EAAWC,GAAKG,gBAE/C,EAAKqD,MAAM1B,aAAa9B,IAAQ,MAC3B,MAAiB,UAAb+E,GAAwB,EAAKvB,MAAM1B,aAAa9B,GAAO,GAGhE,OAFA,EAAKwD,MAAM1B,aAAa9B,IAAQ,EAIlCU,EAAUV,GAAO,EAAK4E,YACpBlE,EAAUV,GACVD,EAAWC,GAAKE,MAChB6E,GAGF,EAAKR,SAAS,CACZzC,aAAc,EAAK0B,MAAM1B,aACzBwB,KAAM5C,IAER,EAAKwD,eACL,EAAKC,iBACL,EAAK4B,gB,EAGPC,YAAc,WACZ7E,QAAQC,IAAI,kBAAoBJ,GAChCL,EAAe,GACf,IAAK,IAAIG,EAAI,EAAGA,EAAIf,EAAWS,OAAQM,IACjC,EAAK0C,MAAM1B,aAAahB,GAAK,GAC/BH,EAAaI,KAAK,CAChBf,IAAKc,EACLb,KAAMF,EAAWe,GAAGb,KACpB4C,OAAQ,EAAKW,MAAM1B,aAAahB,GAChCiB,KAAM,EAAKyB,MAAMF,KAAKxC,GAEtBgC,OAAQ,EAAKU,MAAMI,UAAU9C,KAGjC,EAAKyD,SAAS,CACZ5B,WAAY,EAAKa,MAAMxB,SACvBY,aAAc,EAAKY,MAAMmC,iB,EAK/BzD,UAAY,WACV,GAAI,EAAKsB,MAAMxB,SAAW,EAA1B,CACEjC,EAAW6B,KAAI,SAAAC,GACb9B,EAAW8B,EAAE7B,KAAKG,iBAAmBG,EAAYuB,EAAE7B,QAErDU,EAAY,IAAIH,MAAMR,EAAWS,QAAQC,KAAK,GAC9CH,EAAc,IAAIC,MAAMR,EAAWS,QAAQC,KAAK,GAEhD,IAAIwF,EAAW,EAAKrB,YAClB,EAAKpB,MAAMlB,MACX,EAAKkB,MAAMxB,SACX,SAGF,EAAKuC,SAAS,CACZjC,MAAO2D,EACPA,SAAU,EAAKzC,MAAMlB,MACrBe,OAAO,EACPvB,aAAcxB,EACdgD,KAAM5C,EACNsB,SAAU,EACV2D,cAAe,IAEjB,EAAKK,gB,wEAOP,OACE,oCACE,kBAACE,EAAA,OAAD,KACE,0BAAMC,QAAQ,UACd,0BACElG,KAAK,WACLmG,QAAQ,0CAEV,0BAAMC,aAAW,kBAAkBD,QAAQ,YAC3C,0BACEE,SAAS,SACTF,QAAQ,+CAEV,0BAAME,SAAS,UAAUF,QAAQ,gBACjC,0BACEE,SAAS,WACTF,QAAQ,kDAEV,0BACEE,SAAS,iBACTF,QAAQ,8DAEV,0BACEE,SAAS,WACTF,QAAQ,8DAEV,0BAAMnG,KAAK,eAAemG,QAAQ,QAClC,0BAAMnG,KAAK,eAAemG,QAAQ,gBAClC,0BAAMnG,KAAK,kBAAkBmG,QAAQ,gBACrC,iFAEF,yBAAKjE,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEL,aAAcyE,KAAK/C,MAAM1B,aACzB5B,MAAOqG,KAAK/C,MAAMG,YAClB5B,KAAMwE,KAAK/C,MAAMI,UACjB5B,SAAUuE,KAAK/C,MAAMmC,cACrBrD,MAAOiE,KAAK/C,MAAMC,WAClBhB,YAAa8D,KAAK/C,MAAME,iBAKxBL,MAAOkD,KAAK/C,MAAMH,MAClBV,WAAY4D,KAAK/C,MAAMb,WACvBC,aAAc2D,KAAK/C,MAAMZ,aACzBpB,QAAS+E,KAAK/C,MAAMhC,QACpBE,eAAgB6E,KAAK7E,eACrBuB,WAAYsD,KAAKtD,WACjBf,UAAWqE,KAAKrE,kB,GAjRVsE,aCrSEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5ff69437.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport \"./App.css\";\n\nlet goodsArray = [\n  { key: 0, name: \"towar PIERWSZY\", price: 0.01, numberAvailable: 111 },\n  { key: 1, name: \"good SECOND\", price: 1, numberAvailable: 131 },\n  { key: 2, name: \"DRITTEN Ware\", price: 10, numberAvailable: 100 },\n  { key: 3, name: \"QUATRIÃˆME marchandise\", price: 9.99, numberAvailable: 90 }\n];\n\nlet exchangeRates = [\n  { key: 0, name: \"pln\", ratio: 1 },\n  { key: 1, name: \"euro\", ratio: 0.23 },\n  { key: 2, name: \"dolar\", ratio: 0.26 }\n];\n\nlet numberArray = new Array(goodsArray.length).fill(0);\nlet costArray = new Array(goodsArray.length).fill(0);\n// let costArrayExchange = new Array(goodsArray.length).fill(1);\nlet receiptArray = [];\nlet limitActualValue = 0;\nlet ratio = 1;\nlet prices2ShowArray = [];\nfor (let i = 0; i < goodsArray.length; i++) {\n  prices2ShowArray.push(goodsArray[i].price);\n}\n// let cost2ShowArray = [];\nlet cost2ShowArray = new Array(goodsArray.length).fill(0);\n\nconst Exchange = props => {\n  console.log(props);\n  return (\n    <>\n      <h3>Exchange</h3>\n      <p>Choose corrency</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          PLN{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            checked={props.checked && \"checked\"}\n            //\n            onChange={() => props.handleExchange(\"pln\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          Euro{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            // checked={props.checked}\n            onChange={() => props.handleExchange(\"euro\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          US Dollar{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            // checked={props.checked}\n            onChange={() => props.handleExchange(\"dolar\")}\n          />\n        </label>\n      </form>\n    </>\n  );\n};\n\nconst Cashier = props => {\n  return (\n    <>\n      <h3>Cashier</h3>\n      <ul>\n        {goodsArray.map(t =>\n          props.numberInCart[t.key] > 0 ? (\n            <li key={t.key}>\n              {t.name}: {props.numberInCart[t.key]} pcs, for {props.cost[t.key]}\n            </li>\n          ) : null\n        )}\n      </ul>\n      <p>Sum total: {props.sumTotal}</p>\n      <button\n        onClick={() => props.handleBuy()}\n        className={!props.sumTotal ? \"disabled\" : undefined}\n      >\n        Kupuj / Buy / Kaufen / Acheter\n      </button>\n    </>\n  );\n};\n\nconst Wallet = props => {\n  return (\n    <>\n      <h3>Wallet</h3>\n      <p>\n        {props.limit > 0\n          ? `Limit in wallet: ${props.limit}`\n          : `Limit already exceeded by: ${Math.abs(props.limit)}`}\n      </p>\n      <p>\n        {props.limitActual > 0\n          ? `Currently in the wallet: ${props.limitActual}`\n          : `Currently over budget: ${Math.abs(props.limitActual)}`}\n      </p>\n    </>\n  );\n};\n\nconst Order = props => {\n  console.log(\"Order \" + props.orderValue, props.orderValueIC);\n  return (\n    <>\n      <h3>Your order:</h3>\n      <ul>\n        {receiptArray.map(t => (\n          <li key={t.key}>\n            {t.name}; {t.number} pcs, for {t.cost}{\" \"}\n            {t.cost !== t.costIC ? \"(\" + t.costIC + \")\" : null}\n          </li>\n        ))}\n      </ul>\n      <p>\n        Sum total: {props.orderValue}{\" \"}\n        {props.orderValue == props.orderValueIC\n          ? null\n          : \"(\" + props.orderValueIC + \")\"}\n      </p>\n      <strong>Thank you!</strong>\n    </>\n  );\n};\n\n// const Helmet = () => {\n//   return (\n//     <>\n//     </>\n//   );\n// };\n\nconst Header = () => {\n  return (\n    <header>\n      <h3>Black Friday application - what it does?</h3>\n      <ul>\n        <li>\n          Stimulate your happiness by simulacring ecstasy of getting new better\n          and best goods. Buying makes people happy.\n        </li>\n        <li>\n          One can add (and remove if wants) more new goods. Every good is good.\n        </li>\n        <li>\n          Stock info is updated immediately after purchase. Additionally\n          information about current capacity of purchase is provided\n        </li>\n        <li>\n          Budget limit is displayed, current and total. You can track overruns,\n          no warnings just info.\n        </li>\n        <li>\n          Prices, prices everywhere. Of a good, for one piece, all you are\n          buyimg, total sum of purchase, actual and the previous one.\n        </li>\n        <li>\n          Complete list of good: being purchased now, and in the previous\n          purchase.\n        </li>\n        <li>\n          Application is in progress, new functions, and features are on the way\n          - this is my very first React application, so it's gonna grow till be\n          useful in learning this framework.\n        </li>\n      </ul>\n      <h1>Kupuj towary! Waren kaufen! Buy Goods! Acheter des biens !</h1>\n    </header>\n  );\n};\n\nconst CartWidget = props => {\n  const { numberAvailable } = props.numberAvailable;\n  const key = props.props;\n  return (\n    <div className=\"cartwidget\">\n      <div>\n        <h4>Availability</h4>\n        <p>Yet to buy: {numberAvailable - props.numberInCart[key]} pcs</p>\n        <p>In stock: {numberAvailable} pcs</p>\n      </div>\n      <div>\n        <div>\n          <h4>Widget nr {key}</h4>\n          <p>\n            Pcs in the cart: {props.numberInCart[key]},\n            <br />\n            for total: {props.cost[key]}\n          </p>\n        </div>\n        <div>\n          <button\n            onClick={() => props.handleGood(key, \"minus\")}\n            className={props.numberInCart[key] === 0 ? \"disabled\" : undefined}\n          >\n            {\" \"}\n            -{\" \"}\n          </button>\n          <button\n            onClick={() => props.handleGood(key, \"plus\")}\n            className={\n              numberAvailable - props.numberInCart[key] === 0\n                ? \"disabled\"\n                : undefined\n            }\n          >\n            {\" \"}\n            +{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Good = props => {\n  const { key, name, price, numberAvailable } = props.data;\n  return (\n    <div className=\"good\">\n      <h3>{name}</h3>\n      <div className=\"price\">\n        <p>Price: {price}</p>\n        <p>Price for currency of choice: {props.price[key]}</p>\n      </div>\n      {/* <div className=\"price\">Price: {costArrayExchange[key]}</div> */}\n      <CartWidget\n        props={key}\n        numberAvailable={{ numberAvailable }}\n        numberInCart={props.numberInCart}\n        cost={props.cost}\n        handleGood={props.handleGood}\n      />\n    </div>\n  );\n};\n\nconst Main = props => {\n  return (\n    <main>\n      <div className=\"list\">\n        {goodsArray.map(t => (\n          <Good\n            key={t.key}\n            data={t}\n            price={props.price}\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            handleGood={props.handleGood}\n          />\n        ))}\n      </div>\n      <div className=\"cart\">\n        <div>\n          <Exchange\n            checked={props.checked}\n            handleExchange={props.handleExchange}\n          />\n        </div>\n        <hr />\n        <div>\n          <Cashier\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            sumTotal={props.sumTotal}\n            handleBuy={props.handleBuy}\n          />\n        </div>{\" \"}\n        <hr />\n        <div>\n          <Wallet\n            limit={props.limit}\n            sumTotal={props.sumTotal}\n            limitActual={props.limitActual}\n          />\n        </div>\n        {props.order && (\n          <>\n            <hr />\n            <div>\n              <Order\n                bill={props.bill}\n                orderValue={props.orderValue}\n                orderValueIC={props.orderValueIC}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </main>\n  );\n};\n\nclass App extends Component {\n  state = {\n    limit: 100,\n    limitActual: limitActualValue,\n    limit2Show: 0,\n    limitActual2Show: 0,\n    numberInCart: numberArray,\n    bill: costArray,\n    prices2Show: prices2ShowArray,\n    cost2Show: cost2ShowArray,\n    sumTotal: 0,\n    dumTotal2Show: 0,\n    order: false,\n    orderValue: 0,\n    orderValueIC: 0,\n    checked: true,\n    currency: \"pln\"\n  };\n\n  handleExchange = currency => {\n    let c = exchangeRates.filter(c => c.name === currency);\n    ratio = c[0].ratio;\n    this.updateCost2ShowArray();\n    this.makeSumTotal();\n    this.makeArray2Show();\n    prices2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let currencyPrice = parseFloat((goodsArray[i].price * ratio).toFixed(4));\n      prices2ShowArray.push(currencyPrice);\n    }\n    this.setState({\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray,\n      checked: false\n    });\n    if (currency === \"pln\") this.setState({ checked: true });\n    console.log(\"w funkcji handleExchange \" + ratio);\n    return ratio;\n  };\n\n  cutTail = number => {\n    if (number.toString().indexOf(\".\") > 0) {\n      return number.toString().substr(number.toString().indexOf(\".\") + 1, 4);\n    } else {\n      return \"0\";\n    }\n  };\n\n  mathMachine = (x, y, operator) => {\n    let xBefore = Math.floor(x);\n    let xAfter = this.cutTail(x);\n    let yBefore = Math.floor(y);\n    let yAfter = this.cutTail(y);\n\n    let sumBefore;\n    let sumAfter;\n    let sumInArticle;\n\n    switch (operator) {\n      case \"plus\":\n        sumBefore = xBefore + yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) + parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        console.log(\"w mathMachinie PLUS \" + xAfter, yAfter, sumAfter);\n        return sumInArticle;\n      case \"minus\":\n        sumBefore = xBefore - yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) - parseInt(yAfter)) / 100;\n        console.log(\"w mathmachinie MINUS \" + xAfter, yAfter, sumAfter);\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"multiplication\":\n        console.log(\n          \"w mathmachinie MULTIPLICATION \" + xBefore,\n          xAfter,\n          yBefore,\n          yAfter,\n          x,\n          y,\n          operator,\n          ratio\n        );\n        sumBefore = xBefore * y;\n        sumAfter = (xAfter * y) / 10;\n        console.log(\"INTER \" + sumBefore, sumAfter);\n        // sumInArticle = this.mathMachine(sumBefore, sumAfter, \"plus\");\n        sumInArticle = sumBefore + sumAfter;\n        // sumInArticle = (x * y).toFixed(3);\n        return sumInArticle;\n      default:\n        console.log(\"WTF \" + x, y, operator);\n    }\n  };\n\n  updateCost2ShowArray = () => {\n    cost2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let newCost = parseFloat((this.state.bill[i] * ratio).toFixed(4));\n      cost2ShowArray.push(newCost);\n    }\n  };\n\n  makeArray2Show = () => {\n    this.updateCost2ShowArray();\n\n    this.setState(prevState => ({\n      sumTotal2Show: parseFloat((prevState.sumTotal * ratio).toFixed(4)),\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray\n    }));\n    console.log(this.state.sumTotal2Show);\n    // this.makeSumTotal();\n  };\n\n  makeSumTotal = () => {\n    this.updateCost2ShowArray();\n    let sumTotal = this.state.bill.reduce((total, num) => {\n      return total + num;\n    });\n    sumTotal = sumTotal.toFixed(2);\n    if (sumTotal == 0.0) {\n      sumTotal = parseInt(0);\n    }\n    this.setState({\n      sumTotal: sumTotal\n    });\n  };\n\n  makeNewLimit = () => {\n    this.setState(prevState => ({\n      limitActual: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2)\n    }));\n  };\n\n  handleGood = (key, operator) => {\n    if (\n      operator === \"plus\" &&\n      this.state.numberInCart[key] < goodsArray[key].numberAvailable\n    ) {\n      this.state.numberInCart[key] += 1;\n    } else if (operator === \"minus\" && this.state.numberInCart[key] > 0) {\n      this.state.numberInCart[key] -= 1;\n    } else {\n      return;\n    }\n    costArray[key] = this.mathMachine(\n      costArray[key],\n      goodsArray[key].price,\n      operator\n    );\n\n    this.setState({\n      numberInCart: this.state.numberInCart,\n      bill: costArray\n    });\n    this.makeSumTotal();\n    this.makeArray2Show();\n    this.makeNewLimit();\n  };\n\n  makeReceipt = () => {\n    console.log(\"cost2ShowArray \" + cost2ShowArray);\n    receiptArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      if (this.state.numberInCart[i] > 0) {\n        receiptArray.push({\n          key: i,\n          name: goodsArray[i].name,\n          number: this.state.numberInCart[i],\n          cost: this.state.bill[i],\n          // costIC: this.state.bill[i]\n          costIC: this.state.cost2Show[i]\n        });\n      }\n      this.setState({\n        orderValue: this.state.sumTotal,\n        orderValueIC: this.state.sumTotal2Show\n      });\n    }\n  };\n\n  handleBuy = () => {\n    if (this.state.sumTotal > 0) {\n      goodsArray.map(t => {\n        goodsArray[t.key].numberAvailable -= numberArray[t.key];\n      });\n      costArray = new Array(goodsArray.length).fill(0);\n      numberArray = new Array(goodsArray.length).fill(0);\n\n      let newLimit = this.mathMachine(\n        this.state.limit,\n        this.state.sumTotal,\n        \"minus\"\n      );\n\n      this.setState({\n        limit: newLimit,\n        newLimit: this.state.limit,\n        order: true,\n        numberInCart: numberArray,\n        bill: costArray,\n        sumTotal: 0,\n        sumTotal2Show: 0\n      });\n      this.makeReceipt();\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charset=\"UTF-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0\"\n          />\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/\"\n          />\n          <meta property=\"og:type\" content=\"application\" />\n          <meta\n            property=\"og:title\"\n            content=\"Kupuj towary try your Black Friday experience\"\n          />\n          <meta\n            property=\"og:description\"\n            content=\"my first React app - data flow and structuring components\"\n          />\n          <meta\n            property=\"og:image\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/kupujtowary.jpg\"\n          />\n          <meta name=\"twitter:card\" content=\"app\" />\n          <meta name=\"twitter:site\" content=\"@tdudkowski\" />\n          <meta name=\"twitter:creator\" content=\"@tdudkowski\" />\n          <title>Kupuj towary try your Black Friday experience</title>\n        </Helmet>\n        <div className=\"container\">\n          <Header />\n          <Main\n            numberInCart={this.state.numberInCart}\n            price={this.state.prices2Show}\n            cost={this.state.cost2Show}\n            sumTotal={this.state.sumTotal2Show}\n            limit={this.state.limit2Show}\n            limitActual={this.state.limitActual2Show}\n            // limit={parseFloat((this.state.limit * ratio).toFixed(2))}\n            // limitActual={parseFloat(\n            //   (this.state.limitActual * ratio).toFixed(2)\n            // )}\n            order={this.state.order}\n            orderValue={this.state.orderValue}\n            orderValueIC={this.state.orderValueIC}\n            checked={this.state.checked}\n            handleExchange={this.handleExchange}\n            handleGood={this.handleGood}\n            handleBuy={this.handleBuy}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport App from \"./Kupuj-towary/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}