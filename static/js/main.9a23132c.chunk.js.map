{"version":3,"sources":["Kupuj-towary/App.js","serviceWorker.js","index.js"],"names":["goodsArray","key","name","price","numberAvailable","exchangeRates","ratio","numberArray","Array","length","fill","costArray","receiptArray","limitActualValue","prices2ShowArray","i","push","cost2ShowArray","txt","light","dark","contrast","thisnumber","langjson","en","handleLanguage","Exchange","props","action","htmlFor","type","checked","onChange","handleExchange","Cashier","map","t","numberInCart","cost","sumTotal","onClick","handleBuy","className","undefined","Wallet","limit","Math","abs","limitActual","Order","number","costIC","orderValue","orderValueIC","Header","Language","Style","handleStyle","Pad","CartWidget","handleGood","Good","data","Main","order","bill","App","state","limit2Show","limitActual2Show","prices2Show","cost2Show","dumTotal2Show","currency","style","classNames","filter","e","join","setState","lang","c","updateCost2ShowArray","makeSumTotal","makeArray2Show","currencyPrice","parseFloat","toFixed","prevState","cutTail","toString","indexOf","substr","mathMachine","x","y","operator","sumBefore","xBefore","floor","xAfter","yBefore","yAfter","parseInt","newCost","sumTotal2Show","reduce","total","num","makeNewLimit","makeReceipt","newLimit","this","Helmet","charset","content","http-equiv","property","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a23132c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport \"./App.css\";\nimport langjson from \"./lang.json\";\nimport \"./modes.css\";\n\nlet goodsArray = [\n  { key: 0, name: \"towar PIERWSZY\", price: 0.01, numberAvailable: 111 },\n  { key: 1, name: \"good SECOND\", price: 1, numberAvailable: 131 },\n  { key: 2, name: \"DRITTEN Ware\", price: 10, numberAvailable: 100 },\n  { key: 3, name: \"QUATRIÈME marchandise\", price: 9.99, numberAvailable: 90 }\n];\n\nlet exchangeRates = [\n  { key: 0, name: \"pln\", ratio: 1 },\n  { key: 1, name: \"euro\", ratio: 0.23 },\n  { key: 2, name: \"dolar\", ratio: 0.26 }\n];\n\nlet numberArray = new Array(goodsArray.length).fill(0);\nlet costArray = new Array(goodsArray.length).fill(0);\n// let costArrayExchange = new Array(goodsArray.length).fill(1);\nlet receiptArray = [];\nlet limitActualValue = 0;\nlet ratio = 1;\nlet prices2ShowArray = [];\nfor (let i = 0; i < goodsArray.length; i++) {\n  prices2ShowArray.push(goodsArray[i].price);\n}\n// let cost2ShowArray = [];\nlet cost2ShowArray = new Array(goodsArray.length).fill(0);\n// let string01 = '<span id=\"txt12\">Limit in wallet</span>';\n// let string02 = '<span id=\"txt13\">Limit already exceeded by</span>';\n// let string02 = '&lt;span id=\"txt13\"&gt;Limit already exceeded by&lt;/span&gt;';\nlet txt = new Array(26).fill(\"\");\nlet light = true;\nlet dark = false;\nlet contrast = false;\n\nlet classNames = \"\";\n\nconst handleLanguage = () => {\n  txt = [];\n  for (let i = 0; i < 27; i++) {\n    let thisnumber;\n    if (i < 9) {\n      thisnumber = \"0\" + (i + 1);\n    } else {\n      thisnumber = i + 1;\n    }\n    txt.push(langjson.en[thisnumber]);\n  }\n};\n\nhandleLanguage();\n\nconst Exchange = props => {\n  return (\n    <div>\n      <h3>{txt[17]}</h3>\n      <p>{txt[18]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          PLN{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            checked={props.checked && \"checked\"}\n            onChange={() => props.handleExchange(\"pln\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          Euro{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"euro\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          US Dollar{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"dolar\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Cashier = props => {\n  return (\n    <>\n      <h3>{txt[8]}</h3>\n      <ul>\n        {goodsArray.map(t =>\n          props.numberInCart[t.key] > 0 ? (\n            <li key={t.key}>\n              {t.name}: {props.numberInCart[t.key]} pcs, for {props.cost[t.key]}\n            </li>\n          ) : null\n        )}\n      </ul>\n      <p>\n        {txt[9]}: {props.sumTotal}\n      </p>\n      <button\n        onClick={() => props.handleBuy()}\n        className={!props.sumTotal ? \"disabled\" : undefined}\n      >\n        Kupuj / Buy / Kaufen / Acheter\n      </button>\n    </>\n  );\n};\n\nconst Wallet = props => {\n  return (\n    <>\n      <h3>{txt[10]}</h3>\n      <p>\n        {props.limit < 0\n          ? `${txt[12]}: ${Math.abs(props.limit)}`\n          : `${txt[11]}: ${props.limit}`}\n      </p>\n      <p>\n        {props.limitActual > 0\n          ? `${txt[13]}: ${props.limitActual}`\n          : `${txt[14]}: ${Math.abs(props.limitActual)}`}\n      </p>\n    </>\n  );\n};\n\nconst Order = props => {\n  return (\n    <>\n      <h3>{txt[15]}:</h3>\n      <ul>\n        {receiptArray.map(t => (\n          <li key={t.key}>\n            {t.name}; {t.number} pcs, for {t.cost}{\" \"}\n            {t.cost !== t.costIC ? \"(\" + t.costIC + \")\" : null}\n          </li>\n        ))}\n      </ul>\n      <p>\n        {txt[9]}: {props.orderValue}{\" \"}\n        {props.orderValue == props.orderValueIC\n          ? null\n          : \"(\" + props.orderValueIC + \")\"}\n      </p>\n      <strong>{txt[16]}</strong>\n    </>\n  );\n};\n\n// const Helmet = () => {\n//   return (\n//     <>\n//     </>\n//   );\n// };\n\nconst Header = () => {\n  return (\n    <header>\n      <h3>Black Friday application - what it does?</h3>\n      <ul>\n        <li>\n          Stimulate your happiness by simulacring ecstasy of getting new better\n          and best goods. Buying makes people happy.\n        </li>\n        <li>\n          One can add (and remove if wants) more new goods. Every good is good.\n        </li>\n        <li>\n          Stock info is updated immediately after purchase. Additionally\n          information about current capacity of purchase is provided\n        </li>\n        <li>\n          Budget limit is displayed, current and total. You can track overruns,\n          no warnings just info.\n        </li>\n        <li>\n          Prices, prices everywhere. Of a good, for one piece, all you are\n          buyimg, total sum of purchase, actual and the previous one.\n        </li>\n        <li>\n          Complete list of good: being purchased now, and in the previous\n          purchase.\n        </li>\n        <li>\n          Application is in progress, new functions, and features are on the way\n          - this is my very first React application, so it's gonna grow till be\n          useful in learning this framework.\n        </li>\n      </ul>\n      <h1>Kupuj towary! Waren kaufen! Buy Goods! Acheter des biens !</h1>\n    </header>\n  );\n};\n\nconst Language = props => {\n  return (\n    <div>\n      <h3>{txt[19]}</h3>\n      <p>{txt[20]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          Polski\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"pl\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          English\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"en\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Deutsch\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"de\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Francais\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"fr\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Style = props => {\n  return (\n    <div>\n      <h3>{txt[21]}</h3>\n      <p>{txt[22]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          {txt[23]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"light\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          {txt[24]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"dark\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          {txt[25]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"contrast\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Pad = props => {\n  return (\n    <div className=\"pad\">\n      <Exchange checked={props.checked} handleExchange={props.handleExchange} />\n      <Language handleLanguage={props.handleLanguage} />\n      <Style handleStyle={props.handleStyle} txt={props.txt} />\n    </div>\n  );\n};\n\nconst CartWidget = props => {\n  const { numberAvailable } = props.numberAvailable;\n  const key = props.props;\n  return (\n    <div className=\"cartwidget\">\n      <div>\n        <h4>{txt[2]}</h4>\n        <p>\n          {txt[3]}: {numberAvailable - props.numberInCart[key]} pcs\n        </p>\n        <p>\n          {txt[4]}: {numberAvailable} pcs\n        </p>\n      </div>\n      <div>\n        <div>\n          <h4>\n            {txt[5]} {key}\n          </h4>\n          <p>\n            {txt[6]}: {props.numberInCart[key]},\n            <br />\n            {txt[7]}: {props.cost[key]}\n          </p>\n        </div>\n        <div>\n          <button\n            onClick={() => props.handleGood(key, \"minus\")}\n            className={props.numberInCart[key] === 0 ? \"disabled\" : undefined}\n          >\n            {\" \"}\n            -{\" \"}\n          </button>\n          <button\n            onClick={() => props.handleGood(key, \"plus\")}\n            className={\n              numberAvailable - props.numberInCart[key] === 0\n                ? \"disabled\"\n                : undefined\n            }\n          >\n            {\" \"}\n            +{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Good = props => {\n  const { key, name, price, numberAvailable } = props.data;\n  return (\n    <div className=\"good\">\n      <h3>{name}</h3>\n      <div className=\"price\">\n        <p>\n          {/* <span id=\"txt01\">Price</span>: {price} */}\n          {txt[0]}: {price}\n        </p>\n        <p>\n          {/* <span id=\"txt02\">Price for currency of choice</span>:{\" \"} */}\n          {txt[1]}: {props.price[key]}\n        </p>\n      </div>\n      {/* <div className=\"price\">Price: {costArrayExchange[key]}</div> */}\n      <CartWidget\n        props={key}\n        numberAvailable={{ numberAvailable }}\n        numberInCart={props.numberInCart}\n        cost={props.cost}\n        handleGood={props.handleGood}\n      />\n    </div>\n  );\n};\n\nconst Main = props => {\n  return (\n    <main>\n      <div className=\"list\">\n        {goodsArray.map(t => (\n          <Good\n            key={t.key}\n            data={t}\n            price={props.price}\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            txt={props.txt}\n            handleGood={props.handleGood}\n            handleLanguage={props.handleLanguage}\n          />\n        ))}\n      </div>\n      <div className=\"cart\">\n        <div>\n          <Cashier\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            sumTotal={props.sumTotal}\n            handleBuy={props.handleBuy}\n          />\n        </div>{\" \"}\n        <hr />\n        <div>\n          <Wallet\n            limit={props.limit}\n            sumTotal={props.sumTotal}\n            limitActual={props.limitActual}\n            txt={props.txt}\n          />\n        </div>\n        {props.order && (\n          <>\n            <hr />\n            <div>\n              <Order\n                bill={props.bill}\n                orderValue={props.orderValue}\n                orderValueIC={props.orderValueIC}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </main>\n  );\n};\n\nclass App extends Component {\n  state = {\n    limit: 100,\n    limitActual: limitActualValue,\n    limit2Show: 0,\n    limitActual2Show: 0,\n    numberInCart: numberArray,\n    bill: costArray,\n    prices2Show: prices2ShowArray,\n    cost2Show: cost2ShowArray,\n    sumTotal: 0,\n    dumTotal2Show: 0,\n    order: false,\n    orderValue: 0,\n    orderValueIC: 0,\n    checked: true,\n    currency: \"pln\",\n    txt: txt,\n    style: this.classNames\n  };\n\n  handleStyle = style => {\n    if (style === \"dark\") {\n      dark = true;\n      light = false;\n      contrast = false;\n    }\n\n    switch (style) {\n      case \"light\":\n        light = true;\n        dark = false;\n        contrast = false;\n\n        break;\n      case \"dark\":\n        light = false;\n        dark = true;\n        contrast = false;\n        break;\n      case \"contrast\":\n        light = false;\n        dark = false;\n        contrast = true;\n        break;\n      default:\n        light = true;\n        dark = false;\n        contrast = false;\n    }\n\n    let classNames = [\n      \"total\",\n      light && \"light\",\n      dark && \"dark\",\n      contrast && \"contrast\"\n    ]\n      .filter(e => e)\n      .join(\" \");\n\n    this.setState({\n      style: classNames\n    });\n  };\n\n  handleLanguage = lang => {\n    txt = [];\n    for (let i = 0; i < 27; i++) {\n      let thisnumber;\n      if (i < 9) {\n        thisnumber = \"0\" + (i + 1);\n      } else {\n        thisnumber = i + 1;\n      }\n      txt.push(langjson[lang][thisnumber]);\n      this.setState({\n        txt: txt\n      });\n    }\n  };\n\n  handleExchange = currency => {\n    let c = exchangeRates.filter(c => c.name === currency);\n    ratio = c[0].ratio;\n    this.updateCost2ShowArray();\n    this.makeSumTotal();\n    this.makeArray2Show();\n    prices2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let currencyPrice = parseFloat((goodsArray[i].price * ratio).toFixed(4));\n      prices2ShowArray.push(currencyPrice);\n    }\n    this.setState(prevState => ({\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray,\n      checked: false\n    }));\n    if (currency === \"pln\") this.setState({ checked: true });\n    return ratio;\n  };\n\n  cutTail = number => {\n    if (number.toString().indexOf(\".\") > 0) {\n      return number.toString().substr(number.toString().indexOf(\".\") + 1, 4);\n    } else {\n      return \"0\";\n    }\n  };\n\n  mathMachine = (x, y, operator) => {\n    let xBefore = Math.floor(x);\n    let xAfter = this.cutTail(x);\n    let yBefore = Math.floor(y);\n    let yAfter = this.cutTail(y);\n\n    let sumBefore;\n    let sumAfter;\n    let sumInArticle;\n\n    switch (operator) {\n      case \"plus\":\n        sumBefore = xBefore + yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) + parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"minus\":\n        sumBefore = xBefore - yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) - parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"multiplication\":\n        sumBefore = xBefore * y;\n        sumAfter = (xAfter * y) / 10;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      default:\n    }\n  };\n\n  updateCost2ShowArray = () => {\n    cost2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let newCost = parseFloat((this.state.bill[i] * ratio).toFixed(4));\n      cost2ShowArray.push(newCost);\n    }\n  };\n\n  makeArray2Show = () => {\n    this.updateCost2ShowArray();\n    this.setState(prevState => ({\n      sumTotal2Show: parseFloat((prevState.sumTotal * ratio).toFixed(4)),\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      // limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      limitActual2Show: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray\n    }));\n  };\n\n  makeSumTotal = () => {\n    this.updateCost2ShowArray();\n    let sumTotal = this.state.bill.reduce((total, num) => {\n      return total + num;\n    });\n    sumTotal = sumTotal.toFixed(2);\n    if (sumTotal == 0.0) {\n      sumTotal = parseInt(0);\n    }\n    this.setState({\n      sumTotal: sumTotal\n    });\n  };\n\n  makeNewLimit = () => {\n    this.setState(prevState => ({\n      limitActual: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2)\n    }));\n  };\n\n  handleGood = (key, operator) => {\n    if (\n      operator === \"plus\" &&\n      this.state.numberInCart[key] < goodsArray[key].numberAvailable\n    ) {\n      this.state.numberInCart[key] += 1;\n    } else if (operator === \"minus\" && this.state.numberInCart[key] > 0) {\n      this.state.numberInCart[key] -= 1;\n    } else {\n      return;\n    }\n    costArray[key] = this.mathMachine(\n      costArray[key],\n      goodsArray[key].price,\n      operator\n    );\n\n    this.makeSumTotal();\n    this.makeArray2Show();\n    this.makeNewLimit();\n    this.setState(prevState => ({\n      numberInCart: this.state.numberInCart,\n      bill: costArray,\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4))\n    }));\n  };\n\n  makeReceipt = () => {\n    receiptArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      if (this.state.numberInCart[i] > 0) {\n        receiptArray.push({\n          key: i,\n          name: goodsArray[i].name,\n          number: this.state.numberInCart[i],\n          cost: this.state.bill[i],\n          // costIC: this.state.bill[i]\n          costIC: this.state.cost2Show[i]\n        });\n      }\n      this.setState({\n        orderValue: this.state.sumTotal,\n        orderValueIC: this.state.sumTotal2Show\n      });\n    }\n  };\n\n  handleBuy = () => {\n    if (this.state.sumTotal > 0) {\n      goodsArray.map(t => {\n        goodsArray[t.key].numberAvailable -= numberArray[t.key];\n      });\n      costArray = new Array(goodsArray.length).fill(0);\n      numberArray = new Array(goodsArray.length).fill(0);\n\n      let newLimit = this.mathMachine(\n        this.state.limit,\n        this.state.sumTotal,\n        \"minus\"\n      );\n\n      this.setState(prevState => ({\n        // limit2Show: prevState.limitActual2Show,\n        limit: prevState.limitActual,\n        limitActual: newLimit,\n        limit2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n        limitActual2Show: parseFloat(\n          (prevState.limitActual * ratio).toFixed(4)\n        ),\n        order: true,\n        numberInCart: numberArray,\n        bill: costArray,\n        sumTotal: 0,\n        sumTotal2Show: 0\n      }));\n      this.makeReceipt();\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className={this.state.style}>\n        <Helmet>\n          <meta charset=\"UTF-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0\"\n          />\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/\"\n          />\n          <meta property=\"og:type\" content=\"application\" />\n          <meta\n            property=\"og:title\"\n            content=\"Kupuj towary try your Black Friday experience\"\n          />\n          <meta\n            property=\"og:description\"\n            content=\"my first React app - data flow and structuring components\"\n          />\n          <meta\n            property=\"og:image\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/kupujtowary.jpg\"\n          />\n          <meta name=\"twitter:card\" content=\"app\" />\n          <meta name=\"twitter:site\" content=\"@tdudkowski\" />\n          <meta name=\"twitter:creator\" content=\"@tdudkowski\" />\n          <title>Kupuj towary try your Black Friday experience</title>\n        </Helmet>\n        <div className=\"container\">\n          <Header />\n          <Pad\n            txt={this.state.txt}\n            handleExchange={this.handleExchange}\n            handleLanguage={this.handleLanguage}\n            handleStyle={this.handleStyle}\n          />\n          <Main\n            numberInCart={this.state.numberInCart}\n            price={this.state.prices2Show}\n            cost={this.state.cost2Show}\n            sumTotal={this.state.sumTotal2Show}\n            limit={this.state.limit2Show}\n            limitActual={this.state.limitActual2Show}\n            // limit={parseFloat((this.state.limit * ratio).toFixed(2))}\n            // limitActual={parseFloat(\n            //   (this.state.limitActual * ratio).toFixed(2)\n            // )}\n            order={this.state.order}\n            orderValue={this.state.orderValue}\n            orderValueIC={this.state.orderValueIC}\n            checked={this.state.checked}\n            txt={this.state.txt}\n            handleGood={this.handleGood}\n            handleBuy={this.handleBuy}\n            handleLanguage={this.handleLanguage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport App from \"./Kupuj-towary/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}