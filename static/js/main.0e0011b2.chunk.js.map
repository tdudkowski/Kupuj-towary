{"version":3,"sources":["Kupuj-towary/Info.js","Kupuj-towary/Pad.js","Kupuj-towary/App.js","serviceWorker.js","index.js"],"names":["Info","txt","Array","fill","handleLanguage","lang","i","thisnumber","push","langjson","Exchange","props","action","htmlFor","type","name","checked","onChange","handleExchange","Language","Style","handleStyle","Pad","className","goodsArray","key","price","numberAvailable","exchangeRates","ratio","numberArray","length","costArray","receiptArray","limitActualValue","prices2ShowArray","cost2ShowArray","light","dark","contrast","en","Cashier","map","t","numberInCart","cost","sumTotal","onClick","handleBuy","undefined","Wallet","limit","Math","abs","limitActual","Order","number","costIC","orderValue","orderValueIC","CartWidget","handleGood","Good","data","Main","order","bill","App","state","limit2Show","limitActual2Show","prices2Show","cost2Show","dumTotal2Show","currency","style","classNames","filter","e","join","setState","c","updateCost2ShowArray","makeSumTotal","makeArray2Show","currencyPrice","parseFloat","toFixed","prevState","cutTail","toString","indexOf","substr","mathMachine","x","y","operator","sumBefore","xBefore","floor","xAfter","yBefore","yAfter","parseInt","newCost","sumTotal2Show","reduce","total","num","makeNewLimit","makeReceipt","newLimit","this","Helmet","charset","content","http-equiv","property","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e0011b2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Info = () => {\n  return (\n    <header>\n      <h3>Black Friday application - what it does?</h3>\n      <ul>\n        <li>\n          Stimulate your happiness by simulacring ecstasy of getting new better\n          and best goods. Buying makes people happy.\n        </li>\n        <li>\n          One can add (and remove if wants) more new goods. Every good is good.\n        </li>\n        <li>\n          Stock info is updated immediately after purchase. Additionally\n          information about current capacity of purchase is provided\n        </li>\n        <li>\n          Budget limit is displayed, current and total. You can track overruns,\n          no warnings just info.\n        </li>\n        <li>\n          Prices, prices everywhere. Of a good, for one piece, all you are\n          buyimg, total sum of purchase, actual and the previous one.\n        </li>\n        <li>\n          Complete list of good: being purchased now, and in the previous\n          purchase.\n        </li>\n        <li>\n          Application is in progress, new functions, and features are on the way\n          - this is my very first React application, so it's gonna grow till be\n          useful in learning this framework.\n        </li>\n      </ul>\n      <h1>Kupuj towary! Waren kaufen! Buy Goods! Acheter des biens !</h1>\n    </header>\n  );\n};\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport App from \"./App.js\";\nimport langjson from \"./lang.json\";\n\nlet txt = new Array(26).fill(\"\");\n\nconst handleLanguage = (lang = \"en\") => {\n  txt = [];\n  for (let i = 0; i < 27; i++) {\n    let thisnumber;\n    if (i < 9) {\n      thisnumber = \"0\" + (i + 1);\n    } else {\n      thisnumber = i + 1;\n    }\n    txt.push(langjson[lang][thisnumber]);\n  }\n};\n\nhandleLanguage();\n\nconst Exchange = props => {\n  return (\n    <div>\n      <h3>{txt[17]}</h3>\n      <p>{txt[18]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          PLN{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            checked={props.checked && \"checked\"}\n            onChange={() => props.handleExchange(\"pln\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          Euro{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"euro\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          US Dollar{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"dolar\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Language = props => {\n  return (\n    <div>\n      <h3>{txt[19]}</h3>\n      <p>{txt[20]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          Polski\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"pl\");\n              handleLanguage(\"pl\");\n            }}\n          />\n        </label>\n        <label htmlFor=\"\">\n          English\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"en\");\n              handleLanguage(\"en\");\n            }}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Deutsch\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"de\");\n              handleLanguage(\"de\");\n            }}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Francais\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"fr\");\n              handleLanguage(\"fr\");\n            }}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Style = props => {\n  return (\n    <div>\n      <h3>{txt[21]}</h3>\n      <p>{txt[22]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          {txt[23]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"light\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          {txt[24]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"dark\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          {txt[25]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"contrast\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Pad = props => {\n  return (\n    <div className=\"pad\">\n      <Exchange checked={props.checked} handleExchange={props.handleExchange} />\n      <Language handleLanguage={props.handleLanguage} />\n      <Style handleStyle={props.handleStyle} />\n    </div>\n  );\n};\n\nexport default Pad;\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport \"./App.css\";\nimport langjson from \"./lang.json\";\nimport \"./modes.css\";\n\nimport Info from \"./Info\";\nimport Pad from \"./Pad\";\n\nlet goodsArray = [\n  { key: 0, name: \"towar PIERWSZY\", price: 0.01, numberAvailable: 111 },\n  { key: 1, name: \"good SECOND\", price: 1, numberAvailable: 131 },\n  { key: 2, name: \"DRITTEN Ware\", price: 10, numberAvailable: 100 },\n  { key: 3, name: \"QUATRIÈME marchandise\", price: 9.99, numberAvailable: 90 }\n];\n\nlet exchangeRates = [\n  { key: 0, name: \"pln\", ratio: 1 },\n  { key: 1, name: \"euro\", ratio: 0.23 },\n  { key: 2, name: \"dolar\", ratio: 0.26 }\n];\n\nlet numberArray = new Array(goodsArray.length).fill(0);\nlet costArray = new Array(goodsArray.length).fill(0);\nlet receiptArray = [];\nlet limitActualValue = 0;\nlet ratio = 1;\nlet prices2ShowArray = [];\nfor (let i = 0; i < goodsArray.length; i++) {\n  prices2ShowArray.push(goodsArray[i].price);\n}\nlet cost2ShowArray = new Array(goodsArray.length).fill(0);\n\nlet txt = new Array(26).fill(\"\");\n\nlet classNames = \"\";\nlet light = true;\nlet dark = false;\nlet contrast = false;\n\nconst handleLanguage = () => {\n  txt = [];\n  for (let i = 0; i < 27; i++) {\n    let thisnumber;\n    if (i < 9) {\n      thisnumber = \"0\" + (i + 1);\n    } else {\n      thisnumber = i + 1;\n    }\n    txt.push(langjson.en[thisnumber]);\n  }\n};\n\nhandleLanguage();\n\nconst Cashier = props => {\n  return (\n    <>\n      <h3>{txt[8]}</h3>\n      <ul>\n        {goodsArray.map(t =>\n          props.numberInCart[t.key] > 0 ? (\n            <li key={t.key}>\n              {t.name}: {props.numberInCart[t.key]} pcs, for {props.cost[t.key]}\n            </li>\n          ) : null\n        )}\n      </ul>\n      <p>\n        {txt[9]}: {props.sumTotal}\n      </p>\n      <button\n        onClick={() => props.handleBuy()}\n        className={!props.sumTotal ? \"disabled\" : undefined}\n      >\n        Kupuj / Buy / Kaufen / Acheter\n      </button>\n    </>\n  );\n};\n\nconst Wallet = props => {\n  return (\n    <>\n      <h3>{txt[10]}</h3>\n      <p>\n        {props.limit < 0\n          ? `${txt[12]}: ${Math.abs(props.limit)}`\n          : `${txt[11]}: ${props.limit}`}\n      </p>\n      <p>\n        {props.limitActual > 0\n          ? `${txt[13]}: ${props.limitActual}`\n          : `${txt[14]}: ${Math.abs(props.limitActual)}`}\n      </p>\n    </>\n  );\n};\n\nconst Order = props => {\n  return (\n    <>\n      <h3>{txt[15]}:</h3>\n      <ul>\n        {receiptArray.map(t => (\n          <li key={t.key}>\n            {t.name}; {t.number} pcs, for {t.cost}{\" \"}\n            {t.cost !== t.costIC ? \"(\" + t.costIC + \")\" : null}\n          </li>\n        ))}\n      </ul>\n      <p>\n        {txt[9]}: {props.orderValue}{\" \"}\n        {props.orderValue == props.orderValueIC\n          ? null\n          : \"(\" + props.orderValueIC + \")\"}\n      </p>\n      <strong>{txt[16]}</strong>\n    </>\n  );\n};\n\nconst CartWidget = props => {\n  const { numberAvailable } = props.numberAvailable;\n  const key = props.props;\n  return (\n    <div className=\"cartwidget\">\n      <div>\n        <h4>{txt[2]}</h4>\n        <p>\n          {txt[3]}: {numberAvailable - props.numberInCart[key]} pcs\n        </p>\n        <p>\n          {txt[4]}: {numberAvailable} pcs\n        </p>\n      </div>\n      <div>\n        <div>\n          <h4>\n            {txt[5]} {key}\n          </h4>\n          <p>\n            {txt[6]}: {props.numberInCart[key]},\n            <br />\n            {txt[7]}: {props.cost[key]}\n          </p>\n        </div>\n        <div>\n          <button\n            onClick={() => props.handleGood(key, \"minus\")}\n            className={props.numberInCart[key] === 0 ? \"disabled\" : undefined}\n          >\n            {\" \"}\n            -{\" \"}\n          </button>\n          <button\n            onClick={() => props.handleGood(key, \"plus\")}\n            className={\n              numberAvailable - props.numberInCart[key] === 0\n                ? \"disabled\"\n                : undefined\n            }\n          >\n            {\" \"}\n            +{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Good = props => {\n  const { key, name, price, numberAvailable } = props.data;\n  return (\n    <div className=\"good\">\n      <h3>{name}</h3>\n      <div className=\"price\">\n        <p>\n          {txt[0]}: {price}\n        </p>\n        <p>\n          {txt[1]}: {props.price[key]}\n        </p>\n      </div>\n      <CartWidget\n        props={key}\n        numberAvailable={{ numberAvailable }}\n        numberInCart={props.numberInCart}\n        cost={props.cost}\n        handleGood={props.handleGood}\n      />\n    </div>\n  );\n};\n\nconst Main = props => {\n  return (\n    <main>\n      <div className=\"list\">\n        {goodsArray.map(t => (\n          <Good\n            key={t.key}\n            data={t}\n            price={props.price}\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            txt={props.txt}\n            handleGood={props.handleGood}\n            handleLanguage={props.handleLanguage}\n          />\n        ))}\n      </div>\n      <div className=\"cart\">\n        <div>\n          <Cashier\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            sumTotal={props.sumTotal}\n            handleBuy={props.handleBuy}\n          />\n        </div>{\" \"}\n        <hr />\n        <div>\n          <Wallet\n            limit={props.limit}\n            sumTotal={props.sumTotal}\n            limitActual={props.limitActual}\n            txt={props.txt}\n          />\n        </div>\n        {props.order && (\n          <>\n            <hr />\n            <div>\n              <Order\n                bill={props.bill}\n                orderValue={props.orderValue}\n                orderValueIC={props.orderValueIC}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </main>\n  );\n};\n\nclass App extends Component {\n  state = {\n    limit: 100,\n    limitActual: limitActualValue,\n    limit2Show: 0,\n    limitActual2Show: 0,\n    numberInCart: numberArray,\n    bill: costArray,\n    prices2Show: prices2ShowArray,\n    cost2Show: cost2ShowArray,\n    sumTotal: 0,\n    dumTotal2Show: 0,\n    order: false,\n    orderValue: 0,\n    orderValueIC: 0,\n    checked: true,\n    currency: \"pln\",\n    txt: txt,\n    style: this.classNames\n  };\n\n  handleStyle = style => {\n    if (style === \"dark\") {\n      dark = true;\n      light = false;\n      contrast = false;\n    }\n\n    switch (style) {\n      case \"light\":\n        light = true;\n        dark = false;\n        contrast = false;\n\n        break;\n      case \"dark\":\n        light = false;\n        dark = true;\n        contrast = false;\n        break;\n      case \"contrast\":\n        light = false;\n        dark = false;\n        contrast = true;\n        break;\n      default:\n        light = true;\n        dark = false;\n        contrast = false;\n    }\n\n    let classNames = [\n      \"total\",\n      light && \"light\",\n      dark && \"dark\",\n      contrast && \"contrast\"\n    ]\n      .filter(e => e)\n      .join(\" \");\n\n    this.setState({\n      style: classNames\n    });\n  };\n\n  handleLanguage = lang => {\n    txt = [];\n    for (let i = 0; i < 27; i++) {\n      let thisnumber;\n      if (i < 9) {\n        thisnumber = \"0\" + (i + 1);\n      } else {\n        thisnumber = i + 1;\n      }\n      txt.push(langjson[lang][thisnumber]);\n      this.setState({\n        txt: txt\n      });\n    }\n  };\n\n  handleExchange = currency => {\n    let c = exchangeRates.filter(c => c.name === currency);\n    ratio = c[0].ratio;\n    this.updateCost2ShowArray();\n    this.makeSumTotal();\n    this.makeArray2Show();\n    prices2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let currencyPrice = parseFloat((goodsArray[i].price * ratio).toFixed(4));\n      prices2ShowArray.push(currencyPrice);\n    }\n    this.setState(prevState => ({\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray,\n      checked: false\n    }));\n    if (currency === \"pln\") this.setState({ checked: true });\n    return ratio;\n  };\n\n  cutTail = number => {\n    if (number.toString().indexOf(\".\") > 0) {\n      return number.toString().substr(number.toString().indexOf(\".\") + 1, 4);\n    } else {\n      return \"0\";\n    }\n  };\n\n  mathMachine = (x, y, operator) => {\n    let xBefore = Math.floor(x);\n    let xAfter = this.cutTail(x);\n    let yBefore = Math.floor(y);\n    let yAfter = this.cutTail(y);\n\n    let sumBefore;\n    let sumAfter;\n    let sumInArticle;\n\n    switch (operator) {\n      case \"plus\":\n        sumBefore = xBefore + yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) + parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"minus\":\n        sumBefore = xBefore - yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) - parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"multiplication\":\n        sumBefore = xBefore * y;\n        sumAfter = (xAfter * y) / 10;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      default:\n    }\n  };\n\n  updateCost2ShowArray = () => {\n    cost2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let newCost = parseFloat((this.state.bill[i] * ratio).toFixed(4));\n      cost2ShowArray.push(newCost);\n    }\n  };\n\n  makeArray2Show = () => {\n    this.updateCost2ShowArray();\n    this.setState(prevState => ({\n      sumTotal2Show: parseFloat((prevState.sumTotal * ratio).toFixed(4)),\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray\n    }));\n  };\n\n  makeSumTotal = () => {\n    this.updateCost2ShowArray();\n    let sumTotal = this.state.bill.reduce((total, num) => {\n      return total + num;\n    });\n    sumTotal = sumTotal.toFixed(2);\n    if (sumTotal == 0.0) {\n      sumTotal = parseInt(0);\n    }\n    this.setState({\n      sumTotal: sumTotal\n    });\n  };\n\n  makeNewLimit = () => {\n    this.setState(prevState => ({\n      limitActual: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2)\n    }));\n  };\n\n  handleGood = (key, operator) => {\n    if (\n      operator === \"plus\" &&\n      this.state.numberInCart[key] < goodsArray[key].numberAvailable\n    ) {\n      this.state.numberInCart[key] += 1;\n    } else if (operator === \"minus\" && this.state.numberInCart[key] > 0) {\n      this.state.numberInCart[key] -= 1;\n    } else {\n      return;\n    }\n    costArray[key] = this.mathMachine(\n      costArray[key],\n      goodsArray[key].price,\n      operator\n    );\n\n    this.makeSumTotal();\n    this.makeArray2Show();\n    this.makeNewLimit();\n    this.setState(prevState => ({\n      numberInCart: this.state.numberInCart,\n      bill: costArray,\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4))\n    }));\n  };\n\n  makeReceipt = () => {\n    receiptArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      if (this.state.numberInCart[i] > 0) {\n        receiptArray.push({\n          key: i,\n          name: goodsArray[i].name,\n          number: this.state.numberInCart[i],\n          cost: this.state.bill[i],\n          // costIC: this.state.bill[i]\n          costIC: this.state.cost2Show[i]\n        });\n      }\n      this.setState({\n        orderValue: this.state.sumTotal,\n        orderValueIC: this.state.sumTotal2Show\n      });\n    }\n  };\n\n  handleBuy = () => {\n    if (this.state.sumTotal > 0) {\n      goodsArray.map(t => {\n        goodsArray[t.key].numberAvailable -= numberArray[t.key];\n      });\n      costArray = new Array(goodsArray.length).fill(0);\n      numberArray = new Array(goodsArray.length).fill(0);\n\n      let newLimit = this.mathMachine(\n        this.state.limit,\n        this.state.sumTotal,\n        \"minus\"\n      );\n\n      this.setState(prevState => ({\n        limit: prevState.limitActual,\n        limitActual: newLimit,\n        limit2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n        limitActual2Show: parseFloat(\n          (prevState.limitActual * ratio).toFixed(4)\n        ),\n        order: true,\n        numberInCart: numberArray,\n        bill: costArray,\n        sumTotal: 0,\n        sumTotal2Show: 0\n      }));\n      this.makeReceipt();\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className={this.state.style}>\n        <Helmet>\n          <meta charset=\"UTF-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0\"\n          />\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/\"\n          />\n          <meta property=\"og:type\" content=\"application\" />\n          <meta\n            property=\"og:title\"\n            content=\"Kupuj towary try your Black Friday experience\"\n          />\n          <meta\n            property=\"og:description\"\n            content=\"my first React app - data flow and structuring components\"\n          />\n          <meta\n            property=\"og:image\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/kupujtowary.jpg\"\n          />\n          <meta name=\"twitter:card\" content=\"app\" />\n          <meta name=\"twitter:site\" content=\"@tdudkowski\" />\n          <meta name=\"twitter:creator\" content=\"@tdudkowski\" />\n          <title>Kupuj towary try your Black Friday experience</title>\n        </Helmet>\n        <div className=\"container\">\n          <Info />\n          <Pad\n            handleExchange={this.handleExchange}\n            handleLanguage={this.handleLanguage}\n            handleStyle={this.handleStyle}\n          />\n          <Main\n            numberInCart={this.state.numberInCart}\n            price={this.state.prices2Show}\n            cost={this.state.cost2Show}\n            sumTotal={this.state.sumTotal2Show}\n            limit={this.state.limit2Show}\n            limitActual={this.state.limitActual2Show}\n            order={this.state.order}\n            orderValue={this.state.orderValue}\n            orderValueIC={this.state.orderValueIC}\n            checked={this.state.checked}\n            txt={this.state.txt}\n            handleGood={this.handleGood}\n            handleBuy={this.handleBuy}\n            handleLanguage={this.handleLanguage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport App from \"./Kupuj-towary/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}