{"version":3,"sources":["Kupuj-towary/App.js","serviceWorker.js","index.js"],"names":["goodsArray","key","name","price","numberAvailable","exchangeRates","ratio","numberArray","Array","length","fill","costArray","receiptArray","limitActualValue","prices2ShowArray","i","push","cost2ShowArray","txt","thisnumber","langjson","en","handleLanguage","Exchange","props","action","htmlFor","type","checked","onChange","handleExchange","Cashier","map","t","numberInCart","cost","sumTotal","onClick","handleBuy","className","undefined","Wallet","limit","Math","abs","limitActual","Order","number","costIC","orderValue","orderValueIC","Header","Language","Pad","CartWidget","handleGood","Good","data","Main","order","bill","App","state","limit2Show","limitActual2Show","prices2Show","cost2Show","dumTotal2Show","currency","lang","setState","c","filter","updateCost2ShowArray","makeSumTotal","makeArray2Show","currencyPrice","parseFloat","toFixed","prevState","cutTail","toString","indexOf","substr","mathMachine","x","y","operator","sumBefore","xBefore","floor","xAfter","yBefore","yAfter","parseInt","newCost","sumTotal2Show","reduce","total","num","makeNewLimit","makeReceipt","newLimit","Helmet","charset","content","http-equiv","property","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33b2beba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport \"./App.css\";\nimport langjson from \"./lang.json\";\n\nlet goodsArray = [\n  { key: 0, name: \"towar PIERWSZY\", price: 0.01, numberAvailable: 111 },\n  { key: 1, name: \"good SECOND\", price: 1, numberAvailable: 131 },\n  { key: 2, name: \"DRITTEN Ware\", price: 10, numberAvailable: 100 },\n  { key: 3, name: \"QUATRIÈME marchandise\", price: 9.99, numberAvailable: 90 }\n];\n\nlet exchangeRates = [\n  { key: 0, name: \"pln\", ratio: 1 },\n  { key: 1, name: \"euro\", ratio: 0.23 },\n  { key: 2, name: \"dolar\", ratio: 0.26 }\n];\n\nlet numberArray = new Array(goodsArray.length).fill(0);\nlet costArray = new Array(goodsArray.length).fill(0);\n// let costArrayExchange = new Array(goodsArray.length).fill(1);\nlet receiptArray = [];\nlet limitActualValue = 0;\nlet ratio = 1;\nlet prices2ShowArray = [];\nfor (let i = 0; i < goodsArray.length; i++) {\n  prices2ShowArray.push(goodsArray[i].price);\n}\n// let cost2ShowArray = [];\nlet cost2ShowArray = new Array(goodsArray.length).fill(0);\n// let string01 = '<span id=\"txt12\">Limit in wallet</span>';\n// let string02 = '<span id=\"txt13\">Limit already exceeded by</span>';\n// let string02 = '&lt;span id=\"txt13\"&gt;Limit already exceeded by&lt;/span&gt;';\nlet txt = new Array(20).fill(\"\");\n\nconst handleLanguage = () => {\n  txt = [];\n  for (let i = 0; i < 21; i++) {\n    let thisnumber;\n    if (i < 9) {\n      thisnumber = \"0\" + (i + 1);\n    } else {\n      thisnumber = i + 1;\n    }\n    txt.push(langjson.en[thisnumber]);\n  }\n};\n\nhandleLanguage();\n\nconst Exchange = props => {\n  return (\n    <div>\n      <h3>{txt[17]}</h3>\n      <p>{txt[18]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          PLN{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            checked={props.checked && \"checked\"}\n            onChange={() => props.handleExchange(\"pln\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          Euro{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"euro\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          US Dollar{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"dolar\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Cashier = props => {\n  return (\n    <>\n      <h3>{txt[8]}</h3>\n      <ul>\n        {goodsArray.map(t =>\n          props.numberInCart[t.key] > 0 ? (\n            <li key={t.key}>\n              {t.name}: {props.numberInCart[t.key]} pcs, for {props.cost[t.key]}\n            </li>\n          ) : null\n        )}\n      </ul>\n      <p>\n        {txt[9]}: {props.sumTotal}\n      </p>\n      <button\n        onClick={() => props.handleBuy()}\n        className={!props.sumTotal ? \"disabled\" : undefined}\n      >\n        Kupuj / Buy / Kaufen / Acheter\n      </button>\n    </>\n  );\n};\n\nconst Wallet = props => {\n  return (\n    <>\n      <h3>{txt[10]}</h3>\n      <p>\n        {props.limit < 0\n          ? `${txt[12]}: ${Math.abs(props.limit)}`\n          : `${txt[11]}: ${props.limit}`}\n      </p>\n      <p>\n        {props.limitActual > 0\n          ? `${txt[13]}: ${props.limitActual}`\n          : `${txt[14]}: ${Math.abs(props.limitActual)}`}\n      </p>\n    </>\n  );\n};\n\nconst Order = props => {\n  return (\n    <>\n      <h3>{txt[15]}:</h3>\n      <ul>\n        {receiptArray.map(t => (\n          <li key={t.key}>\n            {t.name}; {t.number} pcs, for {t.cost}{\" \"}\n            {t.cost !== t.costIC ? \"(\" + t.costIC + \")\" : null}\n          </li>\n        ))}\n      </ul>\n      <p>\n        {txt[9]}: {props.orderValue}{\" \"}\n        {props.orderValue == props.orderValueIC\n          ? null\n          : \"(\" + props.orderValueIC + \")\"}\n      </p>\n      <strong>{txt[16]}</strong>\n    </>\n  );\n};\n\n// const Helmet = () => {\n//   return (\n//     <>\n//     </>\n//   );\n// };\n\nconst Header = () => {\n  return (\n    <header>\n      <h3>Black Friday application - what it does?</h3>\n      <ul>\n        <li>\n          Stimulate your happiness by simulacring ecstasy of getting new better\n          and best goods. Buying makes people happy.\n        </li>\n        <li>\n          One can add (and remove if wants) more new goods. Every good is good.\n        </li>\n        <li>\n          Stock info is updated immediately after purchase. Additionally\n          information about current capacity of purchase is provided\n        </li>\n        <li>\n          Budget limit is displayed, current and total. You can track overruns,\n          no warnings just info.\n        </li>\n        <li>\n          Prices, prices everywhere. Of a good, for one piece, all you are\n          buyimg, total sum of purchase, actual and the previous one.\n        </li>\n        <li>\n          Complete list of good: being purchased now, and in the previous\n          purchase.\n        </li>\n        <li>\n          Application is in progress, new functions, and features are on the way\n          - this is my very first React application, so it's gonna grow till be\n          useful in learning this framework.\n        </li>\n      </ul>\n      <h1>Kupuj towary! Waren kaufen! Buy Goods! Acheter des biens !</h1>\n    </header>\n  );\n};\n\nconst Language = props => {\n  return (\n    <div>\n      <h3>{txt[19]}</h3>\n      <p>{txt[20]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          Polski\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"pl\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          English\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"en\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Deutsch\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"de\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Francais\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => props.handleLanguage(\"fr\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Pad = props => {\n  return (\n    <div className=\"pad\">\n      <Exchange checked={props.checked} handleExchange={props.handleExchange} />\n      <Language handleLanguage={props.handleLanguage} />\n    </div>\n  );\n};\n\nconst CartWidget = props => {\n  const { numberAvailable } = props.numberAvailable;\n  const key = props.props;\n  return (\n    <div className=\"cartwidget\">\n      <div>\n        <h4>{txt[2]}</h4>\n        <p>\n          {txt[3]}: {numberAvailable - props.numberInCart[key]} pcs\n        </p>\n        <p>\n          {txt[4]}: {numberAvailable} pcs\n        </p>\n      </div>\n      <div>\n        <div>\n          <h4>\n            {txt[5]} {key}\n          </h4>\n          <p>\n            {txt[6]}: {props.numberInCart[key]},\n            <br />\n            {txt[7]}: {props.cost[key]}\n          </p>\n        </div>\n        <div>\n          <button\n            onClick={() => props.handleGood(key, \"minus\")}\n            className={props.numberInCart[key] === 0 ? \"disabled\" : undefined}\n          >\n            {\" \"}\n            -{\" \"}\n          </button>\n          <button\n            onClick={() => props.handleGood(key, \"plus\")}\n            className={\n              numberAvailable - props.numberInCart[key] === 0\n                ? \"disabled\"\n                : undefined\n            }\n          >\n            {\" \"}\n            +{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Good = props => {\n  const { key, name, price, numberAvailable } = props.data;\n  return (\n    <div className=\"good\">\n      <h3>{name}</h3>\n      <div className=\"price\">\n        <p>\n          {/* <span id=\"txt01\">Price</span>: {price} */}\n          {txt[0]}: {price}\n        </p>\n        <p>\n          {/* <span id=\"txt02\">Price for currency of choice</span>:{\" \"} */}\n          {txt[1]}: {props.price[key]}\n        </p>\n      </div>\n      {/* <div className=\"price\">Price: {costArrayExchange[key]}</div> */}\n      <CartWidget\n        props={key}\n        numberAvailable={{ numberAvailable }}\n        numberInCart={props.numberInCart}\n        cost={props.cost}\n        handleGood={props.handleGood}\n      />\n    </div>\n  );\n};\n\nconst Main = props => {\n  return (\n    <main>\n      <div className=\"list\">\n        {goodsArray.map(t => (\n          <Good\n            key={t.key}\n            data={t}\n            price={props.price}\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            txt={props.txt}\n            handleGood={props.handleGood}\n            handleLanguage={props.handleLanguage}\n          />\n        ))}\n      </div>\n      <div className=\"cart\">\n        <div>\n          <Cashier\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            sumTotal={props.sumTotal}\n            handleBuy={props.handleBuy}\n          />\n        </div>{\" \"}\n        <hr />\n        <div>\n          <Wallet\n            limit={props.limit}\n            sumTotal={props.sumTotal}\n            limitActual={props.limitActual}\n            txt={props.txt}\n          />\n        </div>\n        {props.order && (\n          <>\n            <hr />\n            <div>\n              <Order\n                bill={props.bill}\n                orderValue={props.orderValue}\n                orderValueIC={props.orderValueIC}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </main>\n  );\n};\n\nclass App extends Component {\n  state = {\n    limit: 100,\n    limitActual: limitActualValue,\n    limit2Show: 0,\n    limitActual2Show: 0,\n    numberInCart: numberArray,\n    bill: costArray,\n    prices2Show: prices2ShowArray,\n    cost2Show: cost2ShowArray,\n    sumTotal: 0,\n    dumTotal2Show: 0,\n    order: false,\n    orderValue: 0,\n    orderValueIC: 0,\n    checked: true,\n    currency: \"pln\",\n    txt: txt\n  };\n\n  handleLanguage = lang => {\n    txt = [];\n    for (let i = 0; i < 21; i++) {\n      let thisnumber;\n      if (i < 9) {\n        thisnumber = \"0\" + (i + 1);\n      } else {\n        thisnumber = i + 1;\n      }\n      txt.push(langjson[lang][thisnumber]);\n      this.setState({\n        txt: txt\n      });\n    }\n  };\n\n  handleExchange = currency => {\n    let c = exchangeRates.filter(c => c.name === currency);\n    ratio = c[0].ratio;\n    this.updateCost2ShowArray();\n    this.makeSumTotal();\n    this.makeArray2Show();\n    prices2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let currencyPrice = parseFloat((goodsArray[i].price * ratio).toFixed(4));\n      prices2ShowArray.push(currencyPrice);\n    }\n    this.setState(prevState => ({\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray,\n      checked: false\n    }));\n    if (currency === \"pln\") this.setState({ checked: true });\n    return ratio;\n  };\n\n  cutTail = number => {\n    if (number.toString().indexOf(\".\") > 0) {\n      return number.toString().substr(number.toString().indexOf(\".\") + 1, 4);\n    } else {\n      return \"0\";\n    }\n  };\n\n  mathMachine = (x, y, operator) => {\n    let xBefore = Math.floor(x);\n    let xAfter = this.cutTail(x);\n    let yBefore = Math.floor(y);\n    let yAfter = this.cutTail(y);\n\n    let sumBefore;\n    let sumAfter;\n    let sumInArticle;\n\n    switch (operator) {\n      case \"plus\":\n        sumBefore = xBefore + yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) + parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"minus\":\n        sumBefore = xBefore - yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) - parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"multiplication\":\n        sumBefore = xBefore * y;\n        sumAfter = (xAfter * y) / 10;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      default:\n    }\n  };\n\n  updateCost2ShowArray = () => {\n    cost2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let newCost = parseFloat((this.state.bill[i] * ratio).toFixed(4));\n      cost2ShowArray.push(newCost);\n    }\n  };\n\n  makeArray2Show = () => {\n    this.updateCost2ShowArray();\n    this.setState(prevState => ({\n      sumTotal2Show: parseFloat((prevState.sumTotal * ratio).toFixed(4)),\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      // limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      limitActual2Show: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray\n    }));\n  };\n\n  makeSumTotal = () => {\n    this.updateCost2ShowArray();\n    let sumTotal = this.state.bill.reduce((total, num) => {\n      return total + num;\n    });\n    sumTotal = sumTotal.toFixed(2);\n    if (sumTotal == 0.0) {\n      sumTotal = parseInt(0);\n    }\n    this.setState({\n      sumTotal: sumTotal\n    });\n  };\n\n  makeNewLimit = () => {\n    this.setState(prevState => ({\n      limitActual: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2)\n    }));\n  };\n\n  handleGood = (key, operator) => {\n    if (\n      operator === \"plus\" &&\n      this.state.numberInCart[key] < goodsArray[key].numberAvailable\n    ) {\n      this.state.numberInCart[key] += 1;\n    } else if (operator === \"minus\" && this.state.numberInCart[key] > 0) {\n      this.state.numberInCart[key] -= 1;\n    } else {\n      return;\n    }\n    costArray[key] = this.mathMachine(\n      costArray[key],\n      goodsArray[key].price,\n      operator\n    );\n\n    this.setState({\n      numberInCart: this.state.numberInCart,\n      bill: costArray\n    });\n    this.makeSumTotal();\n    this.makeArray2Show();\n    this.makeNewLimit();\n  };\n\n  makeReceipt = () => {\n    receiptArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      if (this.state.numberInCart[i] > 0) {\n        receiptArray.push({\n          key: i,\n          name: goodsArray[i].name,\n          number: this.state.numberInCart[i],\n          cost: this.state.bill[i],\n          // costIC: this.state.bill[i]\n          costIC: this.state.cost2Show[i]\n        });\n      }\n      this.setState({\n        orderValue: this.state.sumTotal,\n        orderValueIC: this.state.sumTotal2Show\n      });\n    }\n  };\n\n  handleBuy = () => {\n    if (this.state.sumTotal > 0) {\n      goodsArray.map(t => {\n        goodsArray[t.key].numberAvailable -= numberArray[t.key];\n      });\n      costArray = new Array(goodsArray.length).fill(0);\n      numberArray = new Array(goodsArray.length).fill(0);\n\n      let newLimit = this.mathMachine(\n        this.state.limit,\n        this.state.sumTotal,\n        \"minus\"\n      );\n\n      this.setState(prevState => ({\n        limit2Show: prevState.limitActual2Show,\n        limit: prevState.limitActual2Show,\n        newLimit: prevState.limit,\n        order: true,\n        numberInCart: numberArray,\n        bill: costArray,\n        sumTotal: 0,\n        sumTotal2Show: 0\n      }));\n      this.makeReceipt();\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Helmet>\n          <meta charset=\"UTF-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0\"\n          />\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/\"\n          />\n          <meta property=\"og:type\" content=\"application\" />\n          <meta\n            property=\"og:title\"\n            content=\"Kupuj towary try your Black Friday experience\"\n          />\n          <meta\n            property=\"og:description\"\n            content=\"my first React app - data flow and structuring components\"\n          />\n          <meta\n            property=\"og:image\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/kupujtowary.jpg\"\n          />\n          <meta name=\"twitter:card\" content=\"app\" />\n          <meta name=\"twitter:site\" content=\"@tdudkowski\" />\n          <meta name=\"twitter:creator\" content=\"@tdudkowski\" />\n          <title>Kupuj towary try your Black Friday experience</title>\n        </Helmet>\n        <div className=\"container\">\n          <Header />\n          <Pad\n            handleExchange={this.handleExchange}\n            handleLanguage={this.handleLanguage}\n          />\n          <Main\n            numberInCart={this.state.numberInCart}\n            price={this.state.prices2Show}\n            cost={this.state.cost2Show}\n            sumTotal={this.state.sumTotal2Show}\n            limit={this.state.limit2Show}\n            limitActual={this.state.limitActual2Show}\n            // limit={parseFloat((this.state.limit * ratio).toFixed(2))}\n            // limitActual={parseFloat(\n            //   (this.state.limitActual * ratio).toFixed(2)\n            // )}\n            order={this.state.order}\n            orderValue={this.state.orderValue}\n            orderValueIC={this.state.orderValueIC}\n            checked={this.state.checked}\n            txt={this.state.txt}\n            handleGood={this.handleGood}\n            handleBuy={this.handleBuy}\n            handleLanguage={this.handleLanguage}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\nimport App from \"./Kupuj-towary/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}