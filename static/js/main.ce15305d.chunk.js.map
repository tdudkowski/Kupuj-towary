{"version":3,"sources":["Kupuj-towary/kupujtowary.jpg","Kupuj-towary/Info.js","Kupuj-towary/Admin.js","Kupuj-towary/Pad.js","Kupuj-towary/App.js","Kupuj-towary/SPA.js","serviceWorker.js","index.js"],"names":["module","exports","Imgsrc","src","require","width","alt","className","Info","goodsArrayBackup","key","name","price","numberAvailable","goodsArray","numberArray","Array","length","fill","costArray","GoodRemoveModify","props","data","onClick","handleModify","AdminPage","id","listOfGoods","map","t","action","htmlFor","type","value","e","handleAddGood","handleRetrieve","Admin","state","passwordOK","listOfGoodsBackup","preventDefault","nameAdded","document","getElementById","priceAdded","numberAdded","toString","indexOf","priceAddedBefore","Math","floor","priceAddedAfter","substr","parseInt","console","log","push","setState","makeThatListAgain","i","index","findIndex","good","splice","handlePassword","passwd","information","textContent","placeholder","this","Component","txt","handleLanguage","lang","thisnumber","langjson","Exchange","checked","onChange","handleExchange","Language","Style","handleStyle","Pad","prices2ShowArray","cost2ShowArray","exchangeRates","ratio","exchange","receiptArray","limitActualValue","light","dark","contrast","en","Cashier","numberInCart","cost","sumTotal","handleBuy","undefined","Wallet","limit","abs","limitActual","Order","number","costIC","orderValue","orderValueIC","CartWidget","handleGood","Good","Main","order","bill","App","limit2Show","limitActual2Show","prices2Show","cost2Show","sumTotal2Show","currency","style","classNames","filter","join","c","updateCost2ShowArray","makeSumTotal","makeArray2Show","currencyPrice","parseFloat","toFixed","prevState","cutTail","mathMachine","x","y","operator","sumBefore","xBefore","xAfter","yBefore","yAfter","newCost","reduce","total","num","makeNewLimit","makeReceipt","newLimit","fetch","then","response","json","usd","rates","mid","catch","err","Spa","Helmet","charset","content","http-equiv","property","href","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce15305d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kupujtowary.1a6ca638.jpg\";","import React from \"react\";\nimport \"./Info.css\";\n\nconst Imgsrc = () => {\n  return (\n    <img\n      src={require(\"./kupujtowary.jpg\")}\n      width=\"420\"\n      alt=\"preview\"\n      className=\"preview\"\n    />\n  );\n};\n\nconst Info = () => {\n  return (\n    <div className=\"info\">\n      <div>\n        <h3>Info</h3>\n        <ul>\n          <li>React App</li>\n          <li>React Router</li>\n          <li>\n            Shop application, one can add goods to the cart, and see expenses.\n          </li>\n          <li>Easy to track limit, and overdraw in real time.</li>\n          <li>\n            Many currencies, one can change on the spot, if other than default\n            (PLN) is chosen, on the receipt there're two currencies.\n          </li>\n          <li>RWD</li>\n          <li>\n            Many languages versions, better (easier) than standard i18n.\n            There're text strings got by function from JSON file.\n          </li>\n          <li>Change styling</li>\n          <li>Fetch - exchange ratios JSON from NBP</li>\n        </ul>\n        <h3>Libs used</h3>\n        <ul>\n          <li>gh-pages</li>\n          <li>Helmet</li>\n          <li>React Router</li>\n        </ul>\n        <h3>Errors known</h3>\n        <ul>\n          <li>\n            Reload at eny other point than / collapsed page into 404, no\n            index.html here.\n          </li>\n          <li>\n            No preview in social media (Facebook or Twitter), seems related to\n            CRA inability to serve og meta tags in a way readable for fb and tt\n            crawlers.\n          </li>\n        </ul>\n        <h3>Faults</h3>\n        <ul>\n          <li>\n            It was built from bottom to the top, without any specific design at\n            the beginning, mostly by just adding next features and functions.\n          </li>\n          <li>This is exercise draft at the process of learning React</li>\n          <li>Code is dirty, hard to optimise, or even change</li>\n        </ul>\n      </div>\n      <div>\n        <h3>Black Friday application - what it does?</h3>\n        <ul>\n          <li>\n            Stimulate your happiness by simulacring ecstasy of getting new\n            better and best goods. Buying makes people happy.\n          </li>\n          <li>\n            One can add (and remove if wants) more new goods. Every good is\n            good.\n          </li>\n          <li>\n            Stock info is updated immediately after purchase. Additionally\n            information about current capacity of purchase is provided\n          </li>\n          <li>\n            Budget limit is displayed, current and total. You can track\n            overruns, no warnings just info.\n          </li>\n          <li>\n            Prices, prices everywhere. Of a good, for one piece, all you are\n            buying, total sum of purchase, actual and the previous one.\n          </li>\n          <li>\n            Complete list of good: being purchased now, and in the previous\n            purchase.\n          </li>\n          <li>\n            Application is in progress, new functions, and features are on the\n            way - this is my very first React application, so it's gonna grow\n            till be useful in learning this framework.\n          </li>\n        </ul>\n        <Imgsrc />\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport \"./Admin.css\";\n\nconst goodsArrayBackup = [\n  { key: 0, name: \"towar PIERWSZY\", price: 0.01, numberAvailable: 110 },\n  { key: 1, name: \"good SECOND\", price: 1, numberAvailable: 110 },\n  { key: 2, name: \"DRITTE Ware\", price: 10, numberAvailable: 110 },\n  { key: 3, name: \"QUATRIÈME marchandise\", price: 9.09, numberAvailable: 110 }\n];\n\nlet goodsArray = [\n  { key: 0, name: \"towar PIERWSZY\", price: 0.01, numberAvailable: 110 },\n  { key: 1, name: \"good SECOND\", price: 1, numberAvailable: 109 },\n  { key: 2, name: \"DRITTE Ware\", price: 10, numberAvailable: 108 },\n  { key: 3, name: \"QUATRIÈME marchandise\", price: 9.09, numberAvailable: 107 }\n];\n\nlet numberArray = new Array(goodsArray.length).fill(0);\nlet costArray = new Array(goodsArray.length).fill(0);\n\nconst GoodRemoveModify = props => {\n  return (\n    <li>\n      Name: {props.data.name}; price: {props.data.price}; number available:{\" \"}\n      {props.data.numberAvailable} -{\" \"}\n      <button onClick={() => props.handleModify(props.data.key)}>Remove</button>\n    </li>\n  );\n};\n\nconst AdminPage = props => {\n  return (\n    <>\n      <div className=\"logged\">\n        <h3>Admin Page</h3>\n        <p>You are logged in!</p>\n        <hr />\n        <h4>Rules for change or adding</h4>\n        <p>Remember</p>\n        <ul>\n          <li>\n            Name of good should be longer than 5 characters (letters or/and\n            numbers included)\n          </li>\n          <li>Price and number must be more than zero</li>\n          <li>Number must be natural</li>\n        </ul>\n        <hr />\n        <h4>\n          Remove or modify goods - modifying elements and update this list after\n          adding new item is still TODO\n        </h4>\n        <ul className=\"listOfGoods\" id=\"listOfGoods\">\n          {props.listOfGoods.map(t => (\n            <GoodRemoveModify\n              key={t.key}\n              data={t}\n              listOfGoods={props.listOfGoods}\n              handleModify={props.handleModify}\n            />\n          ))}\n        </ul>\n        <hr />\n        <h4>Add goods</h4>\n        <form action=\"\">\n          <label htmlFor=\"\">\n            Name: <input type=\"text\" name=\"\" id=\"addName\" />\n          </label>\n          <label htmlFor=\"\">\n            Price: <input type=\"number\" name=\"\" id=\"addPrice\" />\n          </label>\n          <label htmlFor=\"\">\n            Number in stock: <input type=\"number\" name=\"\" id=\"addNumber\" />\n          </label>\n          <input\n            type=\"submit\"\n            value=\"ADD GOOD\"\n            onClick={e => props.handleAddGood(e)}\n          />\n        </form>\n        <hr />\n        <h4>Retrieve standard set of goods</h4>\n        <p>\n          Caution: All goods you've added, and changes you've made will be\n          deleted!\n        </p>\n        <button\n          onClick={() => {\n            props.handleRetrieve();\n          }}\n        >\n          RETRIEVE\n        </button>\n      </div>\n    </>\n  );\n};\n\nclass Admin extends Component {\n  state = {\n    passwordOK: false,\n    listOfGoods: goodsArray,\n    listOfGoodsBackup: goodsArrayBackup\n  };\n\n  handleAddGood = e => {\n    e.preventDefault();\n\n    const nameAdded = document.getElementById(\"addName\").value;\n    let priceAdded = document.getElementById(\"addPrice\").value;\n    const numberAdded = document.getElementById(\"addNumber\").value;\n\n    document.getElementById(\"addName\").value = \"\";\n    document.getElementById(\"addPrice\").value = \"\";\n    document.getElementById(\"addNumber\").value = \"\";\n\n    if (nameAdded.length > 5 && priceAdded > 0 && numberAdded > 0) {\n      if (priceAdded.toString().indexOf(\".\") !== -1) {\n        let priceAddedBefore = Math.floor(priceAdded);\n        let priceAddedAfter = priceAdded\n          .toString()\n          .substr(priceAdded.toString().indexOf(\".\") + 1, 2);\n        priceAdded =\n          parseInt(priceAddedBefore) + parseInt(priceAddedAfter) / 100;\n        if (priceAdded === 0) {\n          console.log(\"price cannot be zero\");\n          return;\n        }\n      }\n      goodsArray.push({\n        key: goodsArray.length,\n        name: nameAdded,\n        price: priceAdded * 1,\n        numberAvailable: parseInt(numberAdded)\n      });\n      costArray.push(0);\n    } else {\n      console.log(\"data are not correct\");\n    }\n\n    numberArray = new Array(goodsArray.length).fill(0);\n  };\n\n  handleRetrieve = () => {\n    goodsArray = [...goodsArrayBackup];\n    this.setState({\n      listOfGoods: goodsArray\n    });\n  };\n\n  makeThatListAgain = () => {\n    for (let i = 0; i < goodsArray.length; i++) {\n      goodsArray[i].key = i;\n    }\n  };\n\n  handleModify = key => {\n    const index = goodsArray.findIndex(good => good.key === key);\n    goodsArray.splice(index, 1);\n    costArray.splice(index, 1);\n    numberArray.splice(index, 1);\n    this.setState({\n      listOfGoods: goodsArray\n    });\n    this.makeThatListAgain();\n  };\n\n  handlePassword = e => {\n    e.preventDefault();\n    let passwd = document.getElementById(\"inputPassword\");\n    let information = document.getElementById(\"information\");\n    if (passwd.value === \"abc\") {\n      this.setState({ passwordOK: true });\n      document.getElementById(\"login\").className = \"hidden\";\n    } else {\n      information.textContent = \"correct password is: abc\";\n    }\n    passwd.value = \"\";\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"login\" id=\"login\">\n          {/* <div className=\"login hidden\" id=\"login\"> */}\n          <h3>Admin</h3>\n          <p>\n            Login <br /> <span id=\"information\"></span>\n          </p>\n          <form>\n            <label htmlFor=\"\">\n              Password: abc\n              <input type=\"password\" id=\"inputPassword\" placeholder=\"abc\" />\n              <button onClick={e => this.handlePassword(e)} type=\"submit\">\n                Send\n              </button>\n            </label>\n          </form>\n        </div>\n        {this.state.passwordOK && (\n          <AdminPage\n            listOfGoods={this.state.listOfGoods}\n            handleAddGood={this.handleAddGood}\n            handleModify={this.handleModify}\n            handleRetrieve={this.handleRetrieve}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport { goodsArray, numberArray, costArray };\nexport default Admin;\n","import React from \"react\";\n// import App from \"./App.js\";\nimport langjson from \"./lang.json\";\n\nlet txt = new Array(26).fill(\"\");\n\nconst handleLanguage = (lang = \"en\") => {\n  txt = [];\n  for (let i = 0; i < 27; i++) {\n    let thisnumber;\n    if (i < 9) {\n      thisnumber = \"0\" + (i + 1);\n    } else {\n      thisnumber = i + 1;\n    }\n    txt.push(langjson[lang][thisnumber]);\n  }\n};\n\nhandleLanguage();\n\nconst Exchange = props => {\n  return (\n    <div>\n      <h3>{txt[17]}</h3>\n      <p>{txt[18]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          PLN{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            checked={props.checked && \"checked\"}\n            onChange={() => props.handleExchange(\"pln\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          Euro{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"euro\")}\n          />{\" \"}\n          <br />\n        </label>\n        <label htmlFor=\"\">\n          US Dollar{\" \"}\n          <input\n            type=\"radio\"\n            name=\"currency\"\n            onChange={() => props.handleExchange(\"dolar\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Language = props => {\n  return (\n    <div>\n      <h3>{txt[19]}</h3>\n      <p>{txt[20]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          Polski\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"pl\");\n              handleLanguage(\"pl\");\n            }}\n          />\n        </label>\n        <label htmlFor=\"\">\n          English\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"en\");\n              handleLanguage(\"en\");\n            }}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Deutsch\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"de\");\n              handleLanguage(\"de\");\n            }}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Francais\n          <input\n            type=\"radio\"\n            name=\"language\"\n            onChange={() => {\n              props.handleLanguage(\"fr\");\n              handleLanguage(\"fr\");\n            }}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Style = props => {\n  return (\n    <div>\n      <h3>{txt[21]}</h3>\n      <p>{txt[22]}</p>\n      <form action=\"\">\n        <label htmlFor=\"\">\n          {txt[23]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"light\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          {txt[24]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"dark\")}\n          />\n        </label>\n        <label htmlFor=\"\">\n          {txt[25]}\n          <input\n            name=\"style\"\n            type=\"radio\"\n            onChange={() => props.handleStyle(\"contrast\")}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\nconst Pad = props => {\n  return (\n    <div className=\"pad\">\n      <Exchange checked={props.checked} handleExchange={props.handleExchange} />\n      <Language handleLanguage={props.handleLanguage} />\n      <Style handleStyle={props.handleStyle} />\n    </div>\n  );\n};\n\nexport default Pad;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport langjson from \"./lang.json\";\nimport \"./modes.css\";\n\nimport { goodsArray, numberArray, costArray } from \"./Admin.js\";\nimport Pad from \"./Pad\";\n\nlet prices2ShowArray = [];\nlet cost2ShowArray = new Array(goodsArray.length).fill(0);\n\nlet exchangeRates = [\n  { key: 0, name: \"pln\", ratio: 1 },\n  { key: 1, name: \"euro\", ratio: 0.23 },\n  { key: 2, name: \"dolar\", ratio: 0.26 }\n];\n\nlet exchange = [1, 0.23, 0.25];\n\nlet receiptArray = [];\nlet limitActualValue = 0;\nlet ratio = 1;\n\n// let newKey;\n// let newI;\n\nlet txt = new Array(26).fill(\"\");\n\nlet light = true;\nlet dark = false;\nlet contrast = false;\n\nconst handleLanguage = () => {\n  txt = [];\n  for (let i = 0; i < 27; i++) {\n    let thisnumber;\n    if (i < 9) {\n      thisnumber = \"0\" + (i + 1);\n    } else {\n      thisnumber = i + 1;\n    }\n    txt.push(langjson.en[thisnumber]);\n  }\n};\n\nhandleLanguage();\n\nconst Cashier = props => {\n  return (\n    <>\n      <h3>{txt[8]}</h3>\n      <ul>\n        {goodsArray.map(t =>\n          props.numberInCart[t.key] > 0 ? (\n            <li key={t.key}>\n              {t.name}: {props.numberInCart[t.key]} pcs, for {props.cost[t.key]}\n            </li>\n          ) : null\n        )}\n      </ul>\n      <p>\n        {txt[9]}: {props.sumTotal}\n      </p>\n      <button\n        onClick={() => props.handleBuy()}\n        className={!props.sumTotal ? \"disabled\" : undefined}\n      >\n        Kupuj / Buy / Kaufen / Acheter\n      </button>\n    </>\n  );\n};\n\nconst Wallet = props => {\n  return (\n    <>\n      <h3>{txt[10]}</h3>\n      <p>\n        {props.limit < 0\n          ? `${txt[12]}: ${Math.abs(props.limit)}`\n          : `${txt[11]}: ${props.limit}`}\n      </p>\n      <p>\n        {props.limitActual > 0\n          ? `${txt[13]}: ${props.limitActual}`\n          : `${txt[14]}: ${Math.abs(props.limitActual)}`}\n      </p>\n    </>\n  );\n};\n\nconst Order = props => {\n  return (\n    <>\n      <h3>{txt[15]}:</h3>\n      <ul>\n        {receiptArray.map(t => (\n          <li key={t.key}>\n            {t.name}; {t.number} pcs, for {t.cost}{\" \"}\n            {t.cost !== t.costIC ? \"(\" + t.costIC + \")\" : null}\n          </li>\n        ))}\n      </ul>\n      <p>\n        {txt[9]}: {props.orderValue}{\" \"}\n        {props.orderValue === props.orderValueIC\n          ? null\n          : \"(\" + props.orderValueIC + \")\"}\n      </p>\n      <strong>{txt[16]}</strong>\n    </>\n  );\n};\n\nconst CartWidget = props => {\n  const { numberAvailable } = props.numberAvailable;\n  const key = props.props;\n  return (\n    <div className=\"cartwidget\">\n      <div>\n        <h4>{txt[2]}</h4>\n        <p>\n          {txt[3]}: {numberAvailable - props.numberInCart[key]} pcs\n        </p>\n        <p>\n          {txt[4]}: {numberAvailable} pcs\n        </p>\n      </div>\n      <div>\n        <div>\n          <h4>\n            {txt[5]} {key}\n          </h4>\n          <p>\n            {txt[6]}: {props.numberInCart[key]},\n            <br />\n            {txt[7]}: {props.cost[key]}\n          </p>\n        </div>\n        <div>\n          <button\n            onClick={() => props.handleGood(key, \"minus\")}\n            className={props.numberInCart[key] === 0 ? \"disabled\" : undefined}\n          >\n            {\" \"}\n            -{\" \"}\n          </button>\n          <button\n            onClick={() => props.handleGood(key, \"plus\")}\n            className={\n              numberAvailable - props.numberInCart[key] === 0\n                ? \"disabled\"\n                : undefined\n            }\n          >\n            {\" \"}\n            +{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Good = props => {\n  const { key, name, price, numberAvailable } = props.data;\n  return (\n    <div className=\"good\">\n      <h3>{name}</h3>\n      <div className=\"price\">\n        <p>\n          {txt[0]}: {price}\n        </p>\n        <p>\n          {txt[1]}: {props.price[key]}\n        </p>\n      </div>\n      <CartWidget\n        props={key}\n        numberAvailable={{ numberAvailable }}\n        numberInCart={props.numberInCart}\n        cost={props.cost}\n        handleGood={props.handleGood}\n      />\n    </div>\n  );\n};\n\nconst Main = props => {\n  return (\n    <main>\n      <div className=\"list\">\n        {goodsArray.map(t => (\n          <Good\n            key={t.key}\n            data={t}\n            price={props.price}\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            txt={props.txt}\n            handleGood={props.handleGood}\n            handleLanguage={props.handleLanguage}\n          />\n        ))}\n      </div>\n      <div className=\"cart\">\n        <div>\n          <Cashier\n            numberInCart={props.numberInCart}\n            cost={props.cost}\n            sumTotal={props.sumTotal}\n            handleBuy={props.handleBuy}\n          />\n        </div>{\" \"}\n        <hr />\n        <div>\n          <Wallet\n            limit={props.limit}\n            sumTotal={props.sumTotal}\n            limitActual={props.limitActual}\n            txt={props.txt}\n          />\n        </div>\n        {props.order && (\n          <>\n            <hr />\n            <div>\n              <Order\n                bill={props.bill}\n                orderValue={props.orderValue}\n                orderValueIC={props.orderValueIC}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </main>\n  );\n};\n\nclass App extends Component {\n  componentDidMount() {\n    fetch(\"http://api.nbp.pl/api/exchangerates/tables/a/\")\n      .then(response => response.json())\n      .then(data => {\n        let usd = data[0].rates[1].mid;\n        let euro = data[0].rates[7].mid;\n        let exchange = [1, (1 / euro).toFixed(4), (1 / usd).toFixed(4)];\n        this.setState({\n          exchange: exchange\n        });\n        exchangeRates[1].ratio = this.state.exchange[1];\n        exchangeRates[2].ratio = this.state.exchange[2];\n      })\n      .catch(err => {\n        console.log(\"Error Reading data \" + err);\n      });\n  }\n\n  state = {\n    limit: 100,\n    limitActual: limitActualValue,\n    limit2Show: 0,\n    limitActual2Show: 0,\n    numberInCart: numberArray,\n    bill: costArray,\n    prices2Show: prices2ShowArray,\n    cost2Show: cost2ShowArray,\n    sumTotal: 0,\n    sumTotal2Show: 0,\n    order: false,\n    orderValue: 0,\n    orderValueIC: 0,\n    checked: true,\n    currency: \"pln\",\n    txt: txt,\n    style: this.classNames,\n    exchange: [...exchange]\n  };\n\n  handleStyle = style => {\n    if (style === \"dark\") {\n      dark = true;\n      light = false;\n      contrast = false;\n    }\n\n    switch (style) {\n      case \"light\":\n        light = true;\n        dark = false;\n        contrast = false;\n        break;\n      case \"dark\":\n        light = false;\n        dark = true;\n        contrast = false;\n        break;\n      case \"contrast\":\n        light = false;\n        dark = false;\n        contrast = true;\n        break;\n      default:\n        light = true;\n        dark = false;\n        contrast = false;\n    }\n\n    let classNames = [\n      \"total\",\n      light && \"light\",\n      dark && \"dark\",\n      contrast && \"contrast\"\n    ]\n      .filter(e => e)\n      .join(\" \");\n\n    this.setState({\n      style: classNames\n    });\n  };\n\n  handleLanguage = lang => {\n    txt = [];\n    for (let i = 0; i < 27; i++) {\n      let thisnumber;\n      if (i < 9) {\n        thisnumber = \"0\" + (i + 1);\n      } else {\n        thisnumber = i + 1;\n      }\n      txt.push(langjson[lang][thisnumber]);\n      this.setState({\n        txt: txt\n      });\n    }\n  };\n\n  handleExchange = currency => {\n    let c = exchangeRates.filter(c => c.name === currency);\n    ratio = c[0].ratio;\n    this.updateCost2ShowArray();\n    this.makeSumTotal();\n    this.makeArray2Show();\n    prices2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let currencyPrice = parseFloat((goodsArray[i].price * ratio).toFixed(4));\n      prices2ShowArray.push(currencyPrice);\n    }\n    this.setState(prevState => ({\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray,\n      checked: false\n    }));\n    if (currency === \"pln\") this.setState({ checked: true });\n    return ratio;\n  };\n\n  cutTail = number => {\n    if (number.toString().indexOf(\".\") > 0) {\n      return number.toString().substr(number.toString().indexOf(\".\") + 1, 4);\n    } else {\n      return \"0\";\n    }\n  };\n\n  mathMachine = (x, y, operator) => {\n    let xBefore = Math.floor(x);\n    let xAfter = this.cutTail(x);\n    let yBefore = Math.floor(y);\n    let yAfter = this.cutTail(y);\n\n    let sumBefore;\n    let sumAfter;\n    let sumInArticle;\n\n    switch (operator) {\n      case \"plus\":\n        sumBefore = xBefore + yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) + parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"minus\":\n        sumBefore = xBefore - yBefore;\n        if (xAfter.length === 1) {\n          xAfter *= 10;\n        }\n        sumAfter = (parseInt(xAfter) - parseInt(yAfter)) / 100;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      case \"multiplication\":\n        sumBefore = xBefore * y;\n        sumAfter = (xAfter * y) / 10;\n        sumInArticle = sumBefore + sumAfter;\n        return sumInArticle;\n      default:\n    }\n  };\n\n  updateCost2ShowArray = () => {\n    cost2ShowArray = [];\n    for (let i = 0; i < goodsArray.length; i++) {\n      let newCost = parseFloat((this.state.bill[i] * ratio).toFixed(4));\n      cost2ShowArray.push(newCost);\n    }\n  };\n\n  makeArray2Show = () => {\n    this.updateCost2ShowArray();\n    this.setState(prevState => ({\n      sumTotal2Show: parseFloat((prevState.sumTotal * ratio).toFixed(4)),\n      limit2Show: parseFloat((prevState.limit * ratio).toFixed(4)),\n      limitActual2Show: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2),\n      prices2Show: prices2ShowArray,\n      cost2Show: cost2ShowArray\n    }));\n  };\n\n  makeSumTotal = () => {\n    this.updateCost2ShowArray();\n    let sumTotal = this.state.bill.reduce((total, num) => {\n      return total + num;\n    });\n    sumTotal = sumTotal.toFixed(2);\n    if (sumTotal === 0.0 || sumTotal === 0) {\n      sumTotal = parseInt(0);\n    }\n    this.setState({\n      sumTotal: sumTotal\n    });\n  };\n\n  makeNewLimit = () => {\n    this.setState(prevState => ({\n      limitActual: this.mathMachine(\n        prevState.limit,\n        prevState.sumTotal,\n        \"minus\"\n      ).toFixed(2)\n    }));\n  };\n\n  handleGood = (key, operator) => {\n    if (\n      operator === \"plus\" &&\n      this.state.numberInCart[key] < goodsArray[key].numberAvailable\n    ) {\n      numberArray[key] += 1;\n    } else if (operator === \"minus\" && this.state.numberInCart[key] > 0) {\n      numberArray[key] -= 1;\n    } else {\n      return;\n    }\n\n    costArray[key] = this.mathMachine(\n      costArray[key],\n      goodsArray[key].price,\n      operator\n    );\n    this.setState({ numberInCart: numberArray, bill: costArray });\n\n    for (let i = 0; i < goodsArray.length; i++) {\n      prices2ShowArray.push(goodsArray[i].price);\n    }\n\n    this.makeSumTotal();\n    this.makeArray2Show();\n    this.makeNewLimit();\n    this.setState(prevState => ({\n      prices2Show: prices2ShowArray,\n      limitActual2Show: parseFloat((prevState.limitActual * ratio).toFixed(4))\n    }));\n  };\n\n  makeReceipt = () => {\n    receiptArray = [];\n\n    for (let i = 0; i < goodsArray.length; i++) {\n      if (this.state.numberInCart[i] > 0) {\n        receiptArray.push({\n          key: i,\n          name: goodsArray[i].name,\n          number: this.state.numberInCart[i],\n          cost: this.state.bill[i],\n          costIC: this.state.cost2Show[i]\n        });\n      }\n    }\n    costArray.fill(0);\n    numberArray.fill(0);\n    this.setState({\n      orderValue: this.state.sumTotal,\n      orderValueIC: this.state.sumTotal2Show,\n      numberInCart: numberArray,\n      cost2Show: this.state.bill\n    });\n  };\n\n  handleBuy = () => {\n    if (this.state.sumTotal > 0) {\n      goodsArray.map(t => {\n        return (goodsArray[t.key].numberAvailable -= numberArray[t.key]);\n      });\n\n      let newLimit = this.mathMachine(\n        this.state.limit,\n        this.state.sumTotal,\n        \"minus\"\n      );\n\n      this.setState(prevState => ({\n        limit: prevState.limitActual,\n        limitActual: newLimit,\n        limit2Show: parseFloat((prevState.limitActual * ratio).toFixed(4)),\n        limitActual2Show: parseFloat(\n          (prevState.limitActual * ratio).toFixed(4)\n        ),\n        bill: costArray,\n        order: true,\n        sumTotal: 0,\n        sumTotal2Show: 0\n      }));\n      this.makeReceipt();\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className={this.state.style}>\n        <div className=\"container\">\n          {/* <Info /> */}\n          <h1>Kupuj towary! Waren kaufen! Buy Goods! Acheter des biens !</h1>\n          <Pad\n            handleExchange={this.handleExchange}\n            handleLanguage={this.handleLanguage}\n            handleStyle={this.handleStyle}\n          />\n          <Main\n            numberInCart={this.state.numberInCart}\n            price={this.state.prices2Show}\n            cost={this.state.cost2Show}\n            sumTotal={this.state.sumTotal2Show}\n            limit={this.state.limit2Show}\n            limitActual={this.state.limitActual2Show}\n            order={this.state.order}\n            orderValue={this.state.orderValue}\n            orderValueIC={this.state.orderValueIC}\n            checked={this.state.checked}\n            txt={this.state.txt}\n            handleGood={this.handleGood}\n            handleBuy={this.handleBuy}\n            handleLanguage={this.handleLanguage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { goodsArray, numberArray };\nexport default App;\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route\n  // Switch\n} from \"react-router-dom\";\nimport \"./SPA.css\";\n\nimport Info from \"./Info.js\";\nimport App from \"./App.js\";\nimport Admin from \"./Admin.js\";\n\nclass Spa extends Component {\n  render() {\n    return (\n      <>\n        <Helmet>\n          <title>\n            Kupuj towary try your Black Friday experience : React App\n          </title>\n          <meta charset=\"UTF-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0\"\n          />\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n          <meta\n            property=\"og:url\"\n            content=\"https://tdudkowski.github.io/Kupuj-towary/\"\n          />\n          <meta property=\"og:type\" content=\"application\" />\n          <meta\n            property=\"og:title\"\n            content=\"Kupuj towary try your Black Friday experience\"\n          />\n          <meta\n            property=\"og:description\"\n            content=\"my first React App - data flow and structuring components\"\n          />\n          <meta name=\"twitter:card\" content=\"app\" />\n          <meta name=\"twitter:site\" content=\"@tdudkowski\" />\n          <meta name=\"twitter:creator\" content=\"@tdudkowski\" />\n          <meta\n            property=\"og:image\"\n            content=\"https://raw.githubusercontent.com/tdudkowski/Kupuj-towary/master/kupujtowary.jpg\"\n          />\n          <meta\n            property=\"og:image:secure_url\"\n            content=\"https://raw.githubusercontent.com/tdudkowski/Kupuj-towary/master/kupujtowary.jpg\"\n          />\n        </Helmet>\n\n        <Router>\n          <div className=\"container\">\n            <header>\n              <nav>\n                <a href=\"https://tdudkowski.github.io/\">to Github Page</a> |\n                <a href=\"https://github.com/tdudkowski/Kupuj-towary\">\n                  repo of Kupuj towary\n                </a>\n              </nav>\n              <nav>\n                <ul>\n                  <li>\n                    <NavLink to=\"/Kupuj-towary\" exact>\n                      Info\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/Kupuj-towary/app\">App</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"/Kupuj-towary/admin\">Admin</NavLink>\n                  </li>\n                </ul>\n              </nav>\n            </header>\n            <section>\n              <Route path=\"/Kupuj-towary/\" exact component={Info} />\n              <Route path=\"/Kupuj-towary/app\" component={App} />\n              <Route path=\"/Kupuj-towary/admin\" component={Admin} />\n            </section>\n          </div>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default Spa;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n// import App from './App';\n// import App from \"./Kupuj-towary/App\";\nimport SPA from \"./Kupuj-towary/SPA\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<SPA />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}